diff --git a/Check/Makefile.am b/Check/Makefile.am
new file mode 100644
--- /dev/null
+++ b/Check/Makefile.am
@@ -0,0 +1,24 @@
+AM_CPPFLAGS = -I$(top_srcdir)/Include $(UFCONFIG_CFLAGS)
+
+EXTRA_DIST = \
+	License.txt \
+	lesser.txt
+
+CHECKSRC = \
+	cholmod_check.c \
+	cholmod_read.c \
+	cholmod_write.c
+
+noinst_LTLIBRARIES = \
+	libchecki.la \
+	libcheckl.la \
+	libcheck.la
+
+libchecki_la_SOURCES = $(CHECKSRC)
+libchecki_la_CPPFLAGS= $(AM_CPPFLAGS)
+
+libcheckl_la_SOURCES = $(CHECKSRC)
+libcheckl_la_CPPFLAGS = $(AM_CPPFLAGS) -DDLONG
+
+libcheck_la_SOURCES =
+libcheck_la_LIBADD = libchecki.la libcheckl.la
diff --git a/Cholesky/Makefile.am b/Cholesky/Makefile.am
new file mode 100644
--- /dev/null
+++ b/Cholesky/Makefile.am
@@ -0,0 +1,41 @@
+AM_CPPFLAGS = -I$(top_srcdir)/Include $(COLAMD_CFLAGS) $(AMD_CFLAGS) $(UFCONFIG_CFLAGS)
+
+EXTRA_DIST = \
+	License.txt \
+	lesser.txt
+
+CHOLESKYSRC = \
+	cholmod_amd.c \
+	cholmod_analyze.c \
+	cholmod_colamd.c \
+	cholmod_etree.c \
+	cholmod_factorize.c \
+	cholmod_postorder.c \
+	cholmod_rcond.c \
+	cholmod_resymbol.c \
+	cholmod_rowcolcounts.c \
+	cholmod_rowfac.c \
+	cholmod_solve.c \
+	cholmod_spsolve.c
+
+noinst_HEADERS = \
+	t_cholmod_lsolve.c \
+	t_cholmod_ltsolve.c \
+	t_cholmod_rowfac.c \
+	t_cholmod_solve.c
+
+noinst_LTLIBRARIES = \
+	libcholeskyi.la \
+	libcholeskyl.la \
+	libcholesky.la
+
+libcholeskyi_la_SOURCES = $(CHOLESKYSRC)
+libcholeskyi_la_LIBADD = $(COLAMD_LIBS) $(AMD_LIBS) -lm
+libcholeskyi_la_CPPFLAGS = $(AM_CPPFLAGS)
+
+libcholeskyl_la_SOURCES = $(CHOLESKYSRC)
+libcholeskyl_la_LIBADD = $(COLAMD_LIBS) $(AMD_LIBS) -lm
+libcholeskyl_la_CPPFLAGS = $(AM_CPPFLAGS) -DDLONG
+
+libcholesky_la_SOURCES =
+libcholesky_la_LIBADD = libcholeskyi.la libcholeskyl.la
diff --git a/Core/Makefile.am b/Core/Makefile.am
new file mode 100644
--- /dev/null
+++ b/Core/Makefile.am
@@ -0,0 +1,43 @@
+AM_CPPFLAGS = -I$(top_srcdir)/Include $(UFCONFIG_CFLAGS)
+
+EXTRA_DIST = \
+	License.txt \
+	lesser.txt
+
+CORESRC = \
+	cholmod_aat.c \
+	cholmod_add.c \
+	cholmod_band.c \
+	cholmod_change_factor.c \
+	cholmod_common.c \
+	cholmod_complex.c \
+	cholmod_copy.c \
+	cholmod_dense.c \
+	cholmod_error.c \
+	cholmod_factor.c \
+	cholmod_memory.c \
+	cholmod_sparse.c \
+	cholmod_transpose.c \
+	cholmod_triplet.c
+
+noinst_HEADERS = \
+	t_cholmod_change_factor.c \
+	t_cholmod_dense.c \
+	t_cholmod_transpose.c \
+	t_cholmod_triplet.c
+
+noinst_LTLIBRARIES = \
+	libcorei.la \
+	libcorel.la \
+	libcore.la
+
+libcorei_la_SOURCES = $(CORESRC)
+libcorei_la_LIBADD = -lm
+libcorei_la_CPPFLAGS = $(AM_CPPFLAGS)
+
+libcorel_la_SOURCES = $(CORESRC)
+libcorel_la_LIBADD = -lm
+libcorel_la_CPPFLAGS = $(AM_CPPFLAGS) -DDLONG
+
+libcore_la_SOURCES =
+libcore_la_LIBADD = libcorei.la libcorel.la
diff --git a/Demo/Makefile.am b/Demo/Makefile.am
new file mode 100644
--- /dev/null
+++ b/Demo/Makefile.am
@@ -0,0 +1,51 @@
+AM_CPPFLAGS = -I$(top_srcdir)/Include $(UFCONFIG_CFLAGS)
+
+EXTRA_DIST = \
+	License.txt \
+	gpl.txt \
+	make.out
+
+dist_noinst_HEADERS = \
+	cholmod_demo.h
+
+dist_noinst_DATA = \
+	Matrix/bcsstk01.tri \
+	Matrix/lp_afiro.tri \
+	Matrix/can___24.mtx \
+	Matrix/c.tri
+
+check_PROGRAMS = \
+	cholmod_demo \
+	cholmod_l_demo \
+	cholmod_simple
+
+noinst_PROGRAMS = \
+	reade \
+	readhb \
+	readhb2
+
+cholmod_demo_SOURCES = cholmod_demo.c
+cholmod_demo_LDADD = $(top_builddir)/libcholmod.la
+
+cholmod_l_demo_SOURCES = cholmod_l_demo.c
+cholmod_l_demo_LDADD = $(top_builddir)/libcholmod.la
+
+cholmod_simple_SOURCES = cholmod_simple.c
+cholmod_simple_LDADD = $(top_builddir)/libcholmod.la
+
+reade_SOURCES = reade.f
+readhb_SOURCES = readhb.f
+readhb2_SOURCES = readhb2.f
+
+check-local: $(check_PROGRAMS) $(dist_noinst_DATA)
+	./cholmod_demo < Matrix/bcsstk01.tri
+	./cholmod_l_demo < Matrix/bcsstk01.tri
+	./cholmod_demo < Matrix/lp_afiro.tri
+	./cholmod_l_demo < Matrix/lp_afiro.tri
+	./cholmod_demo < Matrix/can___24.mtx
+	./cholmod_l_demo < Matrix/can___24.mtx
+	./cholmod_demo < Matrix/c.tri
+	./cholmod_l_demo < Matrix/c.tri
+	./cholmod_simple < Matrix/c.tri
+	./cholmod_simple < Matrix/can___24.mtx
+	./cholmod_simple < Matrix/bcsstk01.tri
diff --git a/Doc/Makefile.am b/Doc/Makefile.am
new file mode 100644
--- /dev/null
+++ b/Doc/Makefile.am
@@ -0,0 +1,235 @@
+EXTRA_DIST = \
+	ChangeLog
+
+dist_noinst_DATA = \
+	UserGuide.bib \
+	UserGuide.tex \
+	header.tex \
+	footer.tex \
+	mheader.tex \
+	mfooter.tex \
+	mfile.awk \
+	rule.awk
+
+pdf_DATA = \
+	UserGuide.pdf
+
+dist_noinst_SCRIPTS = \
+	getmproto \
+	getproto
+
+PROTO_C = \
+	../Demo/cholmod_simple.c
+
+PROTO_H = \
+	../Include/cholmod.h \
+	../Include/cholmod_blas.h \
+	../Include/cholmod_check.h \
+	../Include/cholmod_cholesky.h \
+	../Include/cholmod_complexity.h \
+	../Include/cholmod_config.h \
+	../Include/cholmod_core.h \
+	../Include/cholmod_internal.h \
+	../Include/cholmod_matrixops.h \
+	../Include/cholmod_modify.h \
+	../Include/cholmod_partition.h \
+	../Include/cholmod_supernodal.h \
+	../Include/cholmod_template.h
+
+PROTO_M = \
+	../MATLAB/analyze.m \
+	../MATLAB/bisect.m \
+	../MATLAB/chol2.m \
+	../MATLAB/cholmod2.m \
+	../MATLAB/cholmod_demo.m \
+	../MATLAB/cholmod_make.m \
+	../MATLAB/etree2.m \
+	../MATLAB/graph_demo.m \
+	../MATLAB/lchol.m \
+	../MATLAB/ldl_normest.m \
+	../MATLAB/ldlchol.m \
+	../MATLAB/ldlsolve.m \
+	../MATLAB/ldlsplit.m \
+	../MATLAB/ldlupdate.m \
+	../MATLAB/metis.m \
+	../MATLAB/mread.m \
+	../MATLAB/mwrite.m \
+	../MATLAB/nesdis.m \
+	../MATLAB/resymbol.m \
+	../MATLAB/sdmult.m \
+	../MATLAB/sparse2.m \
+	../MATLAB/spsym.m \
+	../MATLAB/symbfact2.m
+
+UserGuide.pdf: $(dist_noinst_DATA) $(dist_noinst_SCRIPTS) $(PROTO_C) $(PROTO_H) $(PROTO_M)
+	./getmproto ../MATLAB/analyze.m > _analyze_m.tex
+	./getmproto ../MATLAB/bisect.m > _bisect_m.tex
+	./getmproto ../MATLAB/chol2.m > _chol2_m.tex
+	./getmproto ../MATLAB/cholmod2.m > _cholmod2_m.tex
+	./getmproto ../MATLAB/cholmod_demo.m > _cholmod_demo_m.tex
+	./getmproto ../MATLAB/cholmod_make.m > _cholmod_make_m.tex
+	./getmproto ../MATLAB/etree2.m > _etree2_m.tex
+	./getmproto ../MATLAB/graph_demo.m > _graph_demo_m.tex
+	./getmproto ../MATLAB/lchol.m > _lchol_m.tex
+	./getmproto ../MATLAB/ldl_normest.m > _ldl_normest_m.tex
+	./getmproto ../MATLAB/ldlchol.m > _ldlchol_m.tex
+	./getmproto ../MATLAB/ldlsolve.m > _ldlsolve_m.tex
+	./getmproto ../MATLAB/ldlsplit.m > _ldlsplit_m.tex
+	./getmproto ../MATLAB/ldlupdate.m > _ldlupdate_m.tex
+	./getmproto ../MATLAB/metis.m > _metis_m.tex
+	./getmproto ../MATLAB/mread.m > _mread_m.tex
+	./getmproto ../MATLAB/mwrite.m > _mwrite_m.tex
+	./getmproto ../MATLAB/nesdis.m > _nesdis_m.tex
+	./getmproto ../MATLAB/resymbol.m > _resymbol_m.tex
+	./getmproto ../MATLAB/sdmult.m > _sdmult_m.tex
+	./getmproto ../MATLAB/sparse2.m > _sparse2_m.tex
+	./getmproto ../MATLAB/spsym.m > _spsym_m.tex
+	./getmproto ../MATLAB/symbfact2.m > _symbfact2_m.tex
+	./getproto '/include/, /^}/' ../Demo/cholmod_simple.c > _simple.tex
+	./getproto '/typedef struct cholmod_common/, /^}/' ../Include/cholmod_core.h > _common.tex
+	./getproto '/int cholmod_start/, /\*\) ;/' ../Include/cholmod_core.h > _start.tex
+	./getproto '/int cholmod_finish/, /\*\) ;/' ../Include/cholmod_core.h > _finish.tex
+	./getproto '/int cholmod_defaults/, /\*\) ;/' ../Include/cholmod_core.h > _defaults.tex
+	./getproto '/size_t cholmod_maxrank/, /\*\) ;/' ../Include/cholmod_core.h > _maxrank.tex
+	./getproto '/int cholmod_allocate_work/, /\*\) ;/' ../Include/cholmod_core.h > _allocate_work.tex
+	./getproto '/int cholmod_free_work/, /\*\) ;/' ../Include/cholmod_core.h > _free_work.tex
+	./getproto '/long cholmod_clear_flag/, /\*\) ;/' ../Include/cholmod_core.h > _clear_flag.tex
+	./getproto '/int cholmod_error/, /\*\) ;/' ../Include/cholmod_core.h > _error.tex
+	./getproto '/double cholmod_dbound/, /\*\) ;/' ../Include/cholmod_core.h > _dbound.tex
+	./getproto '/double cholmod_hypot/, /double\) ;/' ../Include/cholmod_core.h > _hypot.tex
+	./getproto '/int cholmod_divcomplex/, /\*\) ;/' ../Include/cholmod_core.h > _divcomplex.tex
+	./getproto '/typedef struct cholmod_sparse/, /^}/' ../Include/cholmod_core.h > _sparse.tex
+	./getproto '/cholmod_sparse \*cholmod_allocate_sparse/, /\*\) ;/' ../Include/cholmod_core.h > _allocate_sparse.tex
+	./getproto '/int cholmod_free_sparse/, /\*\) ;/' ../Include/cholmod_core.h > _free_sparse.tex
+	./getproto '/int cholmod_reallocate_sparse/, /\*\) ;/' ../Include/cholmod_core.h > _reallocate_sparse.tex
+	./getproto '/long cholmod_nnz/, /\*\) ;/' ../Include/cholmod_core.h > _nnz.tex
+	./getproto '/cholmod_sparse \*cholmod_speye/, /\*\) ;/' ../Include/cholmod_core.h > _speye.tex
+	./getproto '/cholmod_sparse \*cholmod_spzeros/, /\*\) ;/' ../Include/cholmod_core.h > _spzeros.tex
+	./getproto '/cholmod_sparse \*cholmod_transpose/, /\*\) ;/' ../Include/cholmod_core.h > _transpose.tex
+	./getproto '/int cholmod_transpose_unsym/, /\*\) ;/' ../Include/cholmod_core.h > _transpose_unsym.tex
+	./getproto '/int cholmod_transpose_sym/, /\*\) ;/' ../Include/cholmod_core.h > _transpose_sym.tex
+	./getproto '/cholmod_sparse \*cholmod_ptranspose/, /\*\) ;/' ../Include/cholmod_core.h > _ptranspose.tex
+	./getproto '/int cholmod_sort/, /\*\) ;/' ../Include/cholmod_core.h > _sort.tex
+	./getproto '/cholmod_sparse \*cholmod_band/, /\*\) ;/' ../Include/cholmod_core.h > _band.tex
+	./getproto '/int cholmod_band_inplace/, /\*\) ;/' ../Include/cholmod_core.h > _band_inplace.tex
+	./getproto '/cholmod_sparse \*cholmod_aat/, /\*\) ;/' ../Include/cholmod_core.h > _aat.tex
+	./getproto '/cholmod_sparse \*cholmod_copy_sparse/, /\*\) ;/' ../Include/cholmod_core.h > _copy_sparse.tex
+	./getproto '/cholmod_sparse \*cholmod_copy /, /\*\) ;/' ../Include/cholmod_core.h > _copy.tex
+	./getproto '/cholmod_sparse \*cholmod_add/, /\*\) ;/' ../Include/cholmod_core.h > _add.tex
+	./getproto '/int cholmod_sparse_xtype/, /\*\) ;/' ../Include/cholmod_core.h > _sparse_xtype.tex
+	./getproto '/typedef struct cholmod_factor/, /^}/' ../Include/cholmod_core.h > _factor.tex
+	./getproto '/cholmod_factor \*cholmod_allocate_factor/, /\*\) ;/' ../Include/cholmod_core.h > _allocate_factor.tex
+	./getproto '/int cholmod_free_factor/, /\*\) ;/' ../Include/cholmod_core.h > _free_factor.tex
+	./getproto '/int cholmod_reallocate_factor/, /\*\) ;/' ../Include/cholmod_core.h > _reallocate_factor.tex
+	./getproto '/int cholmod_change_factor/, /\*\) ;/' ../Include/cholmod_core.h > _change_factor.tex
+	./getproto '/int cholmod_pack_factor/, /\*\) ;/' ../Include/cholmod_core.h > _pack_factor.tex
+	./getproto '/int cholmod_reallocate_column/, /\*\) ;/' ../Include/cholmod_core.h > _reallocate_column.tex
+	./getproto '/cholmod_sparse \*cholmod_factor_to_sparse/, /\*\) ;/' ../Include/cholmod_core.h > _factor_to_sparse.tex
+	./getproto '/cholmod_factor \*cholmod_copy_factor/, /\*\) ;/' ../Include/cholmod_core.h > _copy_factor.tex
+	./getproto '/int cholmod_factor_xtype/, /\*\) ;/' ../Include/cholmod_core.h > _factor_xtype.tex
+	./getproto '/typedef struct cholmod_dense/, /^}/' ../Include/cholmod_core.h > _dense.tex
+	./getproto '/cholmod_dense \*cholmod_allocate_dense/, /\*\) ;/' ../Include/cholmod_core.h > _allocate_dense.tex
+	./getproto '/cholmod_dense \*cholmod_zeros/, /\*\) ;/' ../Include/cholmod_core.h > _zeros.tex
+	./getproto '/cholmod_dense \*cholmod_ones/, /\*\) ;/' ../Include/cholmod_core.h > _ones.tex
+	./getproto '/cholmod_dense \*cholmod_eye/, /\*\) ;/' ../Include/cholmod_core.h > _eye.tex
+	./getproto '/int cholmod_free_dense/, /\*\) ;/' ../Include/cholmod_core.h > _free_dense.tex
+	./getproto '/cholmod_dense \*cholmod_sparse_to_dense/, /\*\) ;/' ../Include/cholmod_core.h > _sparse_to_dense.tex
+	./getproto '/cholmod_sparse \*cholmod_dense_to_sparse/, /\*\) ;/' ../Include/cholmod_core.h > _dense_to_sparse.tex
+	./getproto '/cholmod_dense \*cholmod_copy_dense/, /\*\) ;/' ../Include/cholmod_core.h > _copy_dense.tex
+	./getproto '/int cholmod_copy_dense2/, /\*\) ;/' ../Include/cholmod_core.h > _copy_dense2.tex
+	./getproto '/int cholmod_dense_xtype/, /\*\) ;/' ../Include/cholmod_core.h > _dense_xtype.tex
+	./getproto '/typedef struct cholmod_triplet/, /^}/' ../Include/cholmod_core.h > _triplet.tex
+	./getproto '/cholmod_triplet \*cholmod_allocate_triplet/, /\*\) ;/' ../Include/cholmod_core.h > _allocate_triplet.tex
+	./getproto '/int cholmod_free_triplet/, /\*\) ;/' ../Include/cholmod_core.h > _free_triplet.tex
+	./getproto '/int cholmod_reallocate_triplet/, /\*\) ;/' ../Include/cholmod_core.h > _reallocate_triplet.tex
+	./getproto '/cholmod_triplet \*cholmod_sparse_to_triplet/, /\*\) ;/' ../Include/cholmod_core.h > _sparse_to_triplet.tex
+	./getproto '/cholmod_sparse \*cholmod_triplet_to_sparse/, /\*\) ;/' ../Include/cholmod_core.h > _triplet_to_sparse.tex
+	./getproto '/cholmod_triplet \*cholmod_copy_triplet/, /\*\) ;/' ../Include/cholmod_core.h > _copy_triplet.tex
+	./getproto '/int cholmod_triplet_xtype/, /\*\) ;/' ../Include/cholmod_core.h > _triplet_xtype.tex
+	./getproto '/void \*cholmod_malloc/, /\*\) ;/' ../Include/cholmod_core.h > _malloc.tex
+	./getproto '/void \*cholmod_calloc/, /\*\) ;/' ../Include/cholmod_core.h > _calloc.tex
+	./getproto '/void \*cholmod_free/, /\*\) ;/' ../Include/cholmod_core.h > _free.tex
+	./getproto '/void \*cholmod_realloc/, /\*\) ;/' ../Include/cholmod_core.h > _realloc.tex
+	./getproto '/int cholmod_realloc_multiple/, /\*\) ;/' ../Include/cholmod_core.h > _realloc_multiple.tex
+	./getproto '/itype defines the/, /define CHOLMOD_SUPERNODAL/' ../Include/cholmod_core.h > _defn.tex
+	./getproto '/int cholmod_check_common/, /\*\) ;/' ../Include/cholmod_check.h > _check_common.tex
+	./getproto '/int cholmod_print_common/, /\*\) ;/' ../Include/cholmod_check.h > _print_common.tex
+	./getproto '/int cholmod_check_sparse/, /\*\) ;/' ../Include/cholmod_check.h > _check_sparse.tex
+	./getproto '/int cholmod_print_sparse/, /\*\) ;/' ../Include/cholmod_check.h > _print_sparse.tex
+	./getproto '/int cholmod_check_dense/, /\*\) ;/' ../Include/cholmod_check.h > _check_dense.tex
+	./getproto '/int cholmod_print_dense/, /\*\) ;/' ../Include/cholmod_check.h > _print_dense.tex
+	./getproto '/int cholmod_check_factor/, /\*\) ;/' ../Include/cholmod_check.h > _check_factor.tex
+	./getproto '/int cholmod_print_factor/, /\*\) ;/' ../Include/cholmod_check.h > _print_factor.tex
+	./getproto '/int cholmod_check_triplet/, /\*\) ;/' ../Include/cholmod_check.h > _check_triplet.tex
+	./getproto '/int cholmod_print_triplet/, /\*\) ;/' ../Include/cholmod_check.h > _print_triplet.tex
+	./getproto '/int cholmod_check_subset/, /\*\) ;/' ../Include/cholmod_check.h > _check_subset.tex
+	./getproto '/int cholmod_print_subset/, /\*\) ;/' ../Include/cholmod_check.h > _print_subset.tex
+	./getproto '/int cholmod_check_perm/, /\*\) ;/' ../Include/cholmod_check.h > _check_perm.tex
+	./getproto '/int cholmod_print_perm/, /\*\) ;/' ../Include/cholmod_check.h > _print_perm.tex
+	./getproto '/int cholmod_check_parent/, /\*\) ;/' ../Include/cholmod_check.h > _check_parent.tex
+	./getproto '/int cholmod_print_parent/, /\*\) ;/' ../Include/cholmod_check.h > _print_parent.tex
+	./getproto '/cholmod_triplet \*cholmod_read_triplet/, /\*\) ;/' ../Include/cholmod_check.h > _read_triplet.tex
+	./getproto '/cholmod_sparse \*cholmod_read_sparse/, /\*\) ;/' ../Include/cholmod_check.h > _read_sparse.tex
+	./getproto '/cholmod_dense \*cholmod_read_dense/, /\*\) ;/' ../Include/cholmod_check.h > _read_dense.tex
+	./getproto '/void \*cholmod_read_matrix/, /\*\) ;/' ../Include/cholmod_check.h > _read_matrix.tex
+	./getproto '/int cholmod_write_sparse/, /\*\) ;/' ../Include/cholmod_check.h > _write_sparse.tex
+	./getproto '/int cholmod_write_dense/, /\*\) ;/' ../Include/cholmod_check.h > _write_dense.tex
+	./getproto '/cholmod_factor \*cholmod_analyze /, /\*\) ;/' ../Include/cholmod_cholesky.h > _analyze.tex
+	./getproto '/cholmod_factor \*cholmod_analyze_p/, /\*\) ;/' ../Include/cholmod_cholesky.h > _analyze_p.tex
+	./getproto '/int cholmod_factorize /, /\*\) ;/' ../Include/cholmod_cholesky.h > _factorize.tex
+	./getproto '/int cholmod_factorize_p/, /\*\) ;/' ../Include/cholmod_cholesky.h > _factorize_p.tex
+	./getproto '/cholmod_dense \*cholmod_solve/, /\*\) ;/' ../Include/cholmod_cholesky.h > _solve.tex
+	./getproto '/cholmod_sparse \*cholmod_spsolve/, /\*\) ;/' ../Include/cholmod_cholesky.h > _spsolve.tex
+	./getproto '/int cholmod_etree/, /\*\) ;/' ../Include/cholmod_cholesky.h > _etree.tex
+	./getproto '/int cholmod_rowcolcounts/, /\*\) ;/' ../Include/cholmod_cholesky.h > _rowcolcounts.tex
+	./getproto '/int cholmod_analyze_ordering/, /\*\) ;/' ../Include/cholmod_cholesky.h > _analyze_ordering.tex
+	./getproto '/int cholmod_amd/, /\*\) ;/' ../Include/cholmod_cholesky.h > _amd.tex
+	./getproto '/int cholmod_colamd/, /\*\) ;/' ../Include/cholmod_cholesky.h > _colamd.tex
+	./getproto '/int cholmod_rowfac/, /\*\) ;/' ../Include/cholmod_cholesky.h > _rowfac.tex
+	./getproto '/int cholmod_rowfac_mask/, /\*\) ;/' ../Include/cholmod_cholesky.h > _rowfac_mask.tex
+	./getproto '/int cholmod_row_subtree/, /\*\) ;/' ../Include/cholmod_cholesky.h > _row_subtree.tex
+	./getproto '/int cholmod_row_lsubtree/, /\*\) ;/' ../Include/cholmod_cholesky.h > _row_lsubtree.tex
+	./getproto '/int cholmod_resymbol /, /\*\) ;/' ../Include/cholmod_cholesky.h > _resymbol.tex
+	./getproto '/int cholmod_resymbol_noperm/, /\*\) ;/' ../Include/cholmod_cholesky.h > _resymbol_noperm.tex
+	./getproto '/double cholmod_rcond/, /\*\) ;/' ../Include/cholmod_cholesky.h > _rcond.tex
+	./getproto '/long cholmod_postorder/, /\*\) ;/' ../Include/cholmod_cholesky.h > _postorder.tex
+	./getproto '/int cholmod_updown /, /\*\) ;/' ../Include/cholmod_modify.h > _updown.tex
+	./getproto '/int cholmod_updown_solve/, /\*\) ;/' ../Include/cholmod_modify.h > _updown_solve.tex
+	./getproto '/int cholmod_updown_mark/, /\*\) ;/' ../Include/cholmod_modify.h > _updown_mark.tex
+	./getproto '/int cholmod_updown_mask/, /\*\) ;/' ../Include/cholmod_modify.h > _updown_mask.tex
+	./getproto '/int cholmod_rowadd /, /\*\) ;/' ../Include/cholmod_modify.h > _rowadd.tex
+	./getproto '/int cholmod_rowadd_solve/, /\*\) ;/' ../Include/cholmod_modify.h > _rowadd_solve.tex
+	./getproto '/int cholmod_rowadd_mark/, /\*\) ;/' ../Include/cholmod_modify.h > _rowadd_mark.tex
+	./getproto '/int cholmod_rowdel /, /\*\) ;/' ../Include/cholmod_modify.h > _rowdel.tex
+	./getproto '/int cholmod_rowdel_solve/, /\*\) ;/' ../Include/cholmod_modify.h > _rowdel_solve.tex
+	./getproto '/int cholmod_rowdel_mark/, /\*\) ;/' ../Include/cholmod_modify.h > _rowdel_mark.tex
+	./getproto '/int cholmod_drop/, /\*\) ;/' ../Include/cholmod_matrixops.h > _drop.tex
+	./getproto '/double cholmod_norm_dense/, /\*\) ;/' ../Include/cholmod_matrixops.h > _norm_dense.tex
+	./getproto '/double cholmod_norm_sparse/, /\*\) ;/' ../Include/cholmod_matrixops.h > _norm_sparse.tex
+	./getproto '/cholmod_sparse \*cholmod_horzcat/, /\*\) ;/' ../Include/cholmod_matrixops.h > _horzcat.tex
+	./getproto '/define CHOLMOD_SCALAR/, /\*\) ;/' ../Include/cholmod_matrixops.h > _scale.tex
+	./getproto '/int cholmod_sdmult/, /\*\) ;/' ../Include/cholmod_matrixops.h > _sdmult.tex
+	./getproto '/cholmod_sparse \*cholmod_ssmult/, /\*\) ;/' ../Include/cholmod_matrixops.h > _ssmult.tex
+	./getproto '/cholmod_sparse \*cholmod_submatrix/, /\*\) ;/' ../Include/cholmod_matrixops.h > _submatrix.tex
+	./getproto '/cholmod_sparse \*cholmod_vertcat/, /\*\) ;/' ../Include/cholmod_matrixops.h > _vertcat.tex
+	./getproto '/int cholmod_symmetry/, /\*\) ;/' ../Include/cholmod_matrixops.h > _symmetry.tex
+	./getproto '/int cholmod_super_symbolic/, /\*\) ;/' ../Include/cholmod_supernodal.h > _super_symbolic.tex
+	./getproto '/int cholmod_super_numeric/, /\*\) ;/' ../Include/cholmod_supernodal.h > _super_numeric.tex
+	./getproto '/int cholmod_super_lsolve/, /\*\) ;/' ../Include/cholmod_supernodal.h > _super_lsolve.tex
+	./getproto '/int cholmod_super_ltsolve/, /\*\) ;/' ../Include/cholmod_supernodal.h > _super_ltsolve.tex
+	./getproto '/long cholmod_nested_dissection/, /\*\) ;/' ../Include/cholmod_partition.h > _nested_dissection.tex
+	./getproto '/int cholmod_metis/, /\*\) ;/' ../Include/cholmod_partition.h > _metis.tex
+	./getproto '/int cholmod_ccolamd/, /\*\) ;/' ../Include/cholmod_partition.h > _ccolamd.tex
+	./getproto '/int cholmod_camd/, /\*\) ;/' ../Include/cholmod_partition.h > _camd.tex
+	./getproto '/int cholmod_csymamd/, /\*\) ;/' ../Include/cholmod_partition.h > _csymamd.tex
+	./getproto '/int cholmod_csymamd/, /\*\) ;/' ../Include/cholmod_partition.h > _csymamd.tex
+	./getproto '/long cholmod_bisect/, /\*\) ;/' ../Include/cholmod_partition.h > _bisect.tex
+	./getproto '/long cholmod_metis_bisector/, /\*\) ;/' ../Include/cholmod_partition.h > _metis_bisector.tex
+	./getproto '/long cholmod_collapse_septree/, /\*\) ;/' ../Include/cholmod_partition.h > _collapse_septree.tex
+	pdflatex UserGuide
+	bibtex UserGuide
+	pdflatex UserGuide
+	pdflatex UserGuide
+
+clean-local:
+	-$(RM) _temp.awk _*.tex *.dvi *.aux *.log *.lof *.lot *.toc *.bak *.bbl *.blg
diff --git a/Include/Makefile.am b/Include/Makefile.am
new file mode 100644
--- /dev/null
+++ b/Include/Makefile.am
@@ -0,0 +1,42 @@
+EXTRA_DIST = \
+	License.txt \
+	README.txt
+
+pkgincludedir = $(includedir)/cholmod
+
+# Automatically generated headers
+nodist_pkginclude_HEADERS = \
+	cholmod_config.h
+
+pkginclude_HEADERS = \
+	cholmod.h \
+	cholmod_blas.h \
+	cholmod_complexity.h \
+	cholmod_core.h \
+	cholmod_internal.h \
+	cholmod_io64.h \
+	cholmod_template.h
+
+if MOD_CHECK
+pkginclude_HEADERS += cholmod_check.h
+endif
+
+if MOD_CHOLESKY
+pkginclude_HEADERS += cholmod_cholesky.h
+endif
+
+if MOD_PARTITION
+pkginclude_HEADERS += cholmod_partition.h
+endif
+
+if MOD_MATRIXOPS
+pkginclude_HEADERS += cholmod_matrixops.h
+endif
+
+if MOD_MODIFY
+pkginclude_HEADERS += cholmod_modify.h
+endif
+
+if MOD_SUPERNODAL
+pkginclude_HEADERS += cholmod_supernodal.h
+endif
diff --git a/Include/cholmod_config.h b/Include/cholmod_config.h.in
rename from Include/cholmod_config.h
rename to Include/cholmod_config.h.in
--- a/Include/cholmod_config.h
+++ b/Include/cholmod_config.h.in
@@ -69,6 +69,12 @@
 #define LONGBLAS long long
 #define NSUNPERF
 */
+@CHOLMOD_NCHECK@
+@CHOLMOD_NCHOLESKY@
+@CHOLMOD_NPARTITION@
+@CHOLMOD_NMATRIXOPS@
+@CHOLMOD_NMODIFY@
+@CHOLMOD_NSUPERNODAL@
 
 /* -------------------------------------------------------------------------- */
 /* if NGPL is defined, disable all GNU GPL Modules */
diff --git a/MATLAB/Makefile.am b/MATLAB/Makefile.am
new file mode 100644
--- /dev/null
+++ b/MATLAB/Makefile.am
@@ -0,0 +1,25 @@
+# Needed by Doc/Makefile.am
+EXTRA_DIST = \
+	analyze.m \
+	bisect.m \
+	chol2.m \
+	cholmod2.m \
+	cholmod_demo.m \
+	cholmod_make.m \
+	etree2.m \
+	graph_demo.m \
+	lchol.m \
+	ldl_normest.m \
+	ldlchol.m \
+	ldlsolve.m \
+	ldlsplit.m \
+	ldlupdate.m \
+	metis.m \
+	mread.m \
+	mwrite.m \
+	nesdis.m \
+	resymbol.m \
+	sdmult.m \
+	sparse2.m \
+	spsym.m \
+	symbfact2.m
diff --git a/Makefile.am b/Makefile.am
new file mode 100644
--- /dev/null
+++ b/Makefile.am
@@ -0,0 +1,43 @@
+SUBDIRS = Include Core
+EXTRA_DIST = README.txt
+
+pkgconfigdir = $(libdir)/pkgconfig
+pkgconfig_DATA = cholmod.pc
+
+lib_LTLIBRARIES = libcholmod.la
+
+libcholmod_la_SOURCES =
+libcholmod_la_LIBADD = $(top_builddir)/Core/libcore.la
+libcholmod_la_LDFLAGS = -no-undefined -version-info 8:3:7
+
+if MOD_CHECK
+SUBDIRS += Check
+libcholmod_la_LIBADD += $(top_builddir)/Check/libcheck.la
+endif
+
+if MOD_CHOLESKY
+SUBDIRS += Cholesky
+libcholmod_la_LIBADD += $(top_builddir)/Cholesky/libcholesky.la
+endif
+
+if MOD_PARTITION
+SUBDIRS += Partition
+libcholmod_la_LIBADD += $(top_builddir)/Partition/libpartition.la
+endif
+
+if MOD_MATRIXOPS
+SUBDIRS += MatrixOps
+libcholmod_la_LIBADD += $(top_builddir)/MatrixOps/libmatrixops.la
+endif
+
+if MOD_MODIFY
+SUBDIRS += Modify
+libcholmod_la_LIBADD += $(top_builddir)/Modify/libmodify.la
+endif
+
+if MOD_SUPERNODAL
+SUBDIRS += Supernodal
+libcholmod_la_LIBADD += $(top_builddir)/Supernodal/libsupernodal.la
+endif
+
+SUBDIRS += MATLAB Demo Doc
diff --git a/MatrixOps/Makefile.am b/MatrixOps/Makefile.am
new file mode 100644
--- /dev/null
+++ b/MatrixOps/Makefile.am
@@ -0,0 +1,35 @@
+AM_CPPFLAGS = -I$(top_srcdir)/Include $(UFCONFIG_CFLAGS)
+
+EXTRA_DIST = \
+	License.txt \
+	gpl.txt
+
+MATRIXOPSSRC = \
+	cholmod_drop.c \
+	cholmod_horzcat.c \
+	cholmod_norm.c \
+	cholmod_scale.c \
+	cholmod_sdmult.c \
+	cholmod_ssmult.c \
+	cholmod_submatrix.c \
+	cholmod_symmetry.c \
+	cholmod_vertcat.c
+
+noinst_HEADERS = \
+	t_cholmod_sdmult.c
+
+noinst_LTLIBRARIES = \
+	libmatrixopsi.la \
+	libmatrixopsl.la \
+	libmatrixops.la
+
+libmatrixopsi_la_SOURCES = $(MATRIXOPSSRC)
+libmatrixopsi_la_LIBADD = -lm
+libmatrixopsi_la_CPPFLAGS = $(AM_CPPFLAGS)
+
+libmatrixopsl_la_SOURCES = $(MATRIXOPSSRC)
+libmatrixopsl_la_LIBADD = -lm
+libmatrixopsl_la_CPPFLAGS = $(AM_CPPFLAGS) -DDLONG
+
+libmatrixops_la_SOURCES =
+libmatrixops_la_LIBADD = libmatrixopsi.la libmatrixopsl.la
diff --git a/Modify/Makefile.am b/Modify/Makefile.am
new file mode 100644
--- /dev/null
+++ b/Modify/Makefile.am
@@ -0,0 +1,30 @@
+AM_CPPFLAGS = -I$(top_srcdir)/Include $(UFCONFIG_CFLAGS)
+
+EXTRA_DIST = \
+	License.txt \
+	gpl.txt
+
+MODIFYSRC = \
+	cholmod_rowadd.c \
+	cholmod_rowdel.c \
+	cholmod_updown.c
+
+noinst_HEADERS = \
+	t_cholmod_updown.c \
+	t_cholmod_updown_numkr.c
+
+noinst_LTLIBRARIES = \
+	libmodifyi.la \
+	libmodifyl.la \
+	libmodify.la
+
+libmodifyi_la_SOURCES = $(MODIFYSRC)
+libmodifyi_la_LIBADD = -lm
+libmodifyi_la_CPPFLAGS = $(AM_CPPFLAGS)
+
+libmodifyl_la_SOURCES = $(MODIFYSRC)
+libmodifyl_la_LIBADD = -lm
+libmodifyl_la_CPPFLAGS = $(AM_CPPFLAGS) -DDLONG
+
+libmodify_la_SOURCES =
+libmodify_la_LIBADD = libmodifyi.la libmodifyl.la
diff --git a/Partition/Makefile.am b/Partition/Makefile.am
new file mode 100644
--- /dev/null
+++ b/Partition/Makefile.am
@@ -0,0 +1,28 @@
+AM_CPPFLAGS = -I$(top_srcdir)/Include $(METIS_CFLAGS) $(CCOLAMD_CFLAGS) $(CAMD_CFLAGS) $(UFCONFIG_CFLAGS)
+
+EXTRA_DIST = \
+	License.txt \
+	lesser.txt
+
+PARTITIONSRC = \
+	cholmod_camd.c \
+	cholmod_ccolamd.c \
+	cholmod_csymamd.c \
+	cholmod_metis.c \
+	cholmod_nesdis.c
+
+noinst_LTLIBRARIES = \
+	libpartitioni.la \
+	libpartitionl.la \
+	libpartition.la
+
+libpartitioni_la_SOURCES = $(PARTITIONSRC)
+libpartitioni_la_LIBADD = $(METIS_LIBS) $(CCOLAMD_LIBS) $(CAMD_LIBS) -lm
+libpartitioni_la_CPPFLAGS = $(AM_CPPFLAGS)
+
+libpartitionl_la_SOURCES = $(PARTITIONSRC)
+libpartitionl_la_LIBADD = $(METIS_LIBS) $(CCOLAMD_LIBS) $(CAMD_LIBS) -lm
+libpartitionl_la_CPPFLAGS = $(AM_CPPFLAGS) -DDLONG
+
+libpartition_la_SOURCES =
+libpartition_la_LIBADD = libpartitioni.la libpartitionl.la
diff --git a/Supernodal/Makefile.am b/Supernodal/Makefile.am
new file mode 100644
--- /dev/null
+++ b/Supernodal/Makefile.am
@@ -0,0 +1,30 @@
+AM_CPPFLAGS = -I$(top_srcdir)/Include $(UFCONFIG_CFLAGS)
+
+EXTRA_DIST = \
+	License.txt \
+	gpl.txt
+
+SUPERNODALSRC = \
+	cholmod_super_numeric.c \
+	cholmod_super_solve.c \
+	cholmod_super_symbolic.c
+
+noinst_HEADERS = \
+	t_cholmod_super_numeric.c \
+	t_cholmod_super_solve.c
+
+noinst_LTLIBRARIES = \
+	libsupernodali.la \
+	libsupernodall.la \
+	libsupernodal.la
+
+libsupernodali_la_SOURCES = $(SUPERNODALSRC)
+libsupernodali_la_LIBADD = $(LAPACK_LIBS) $(BLAS_LIBS)
+libsupernodali_la_CPPFLAGS = $(AM_CPPFLAGS)
+
+libsupernodall_la_SOURCES = $(SUPERNODALSRC)
+libsupernodall_la_LIBADD = $(LAPACK_LIBS) $(BLAS_LIBS)
+libsupernodall_la_CPPFLAGS = $(AM_CPPFLAGS) -DDLONG
+
+libsupernodal_la_SOURCES =
+libsupernodal_la_LIBADD = libsupernodali.la libsupernodall.la
diff --git a/acx_blas.m4 b/acx_blas.m4
new file mode 100644
--- /dev/null
+++ b/acx_blas.m4
@@ -0,0 +1,191 @@
+##### http://autoconf-archive.cryp.to/acx_blas.html
+#
+# SYNOPSIS
+#
+#   ACX_BLAS([ACTION-IF-FOUND[, ACTION-IF-NOT-FOUND]])
+#
+# DESCRIPTION
+#
+#   This macro looks for a library that implements the BLAS
+#   linear-algebra interface (see http://www.netlib.org/blas/). On
+#   success, it sets the BLAS_LIBS output variable to hold the
+#   requisite library linkages.
+#
+#   To link with BLAS, you should link with:
+#
+#   	$BLAS_LIBS $LIBS $FLIBS
+#
+#   in that order. FLIBS is the output variable of the
+#   AC_F77_LIBRARY_LDFLAGS macro (called if necessary by ACX_BLAS), and
+#   is sometimes necessary in order to link with F77 libraries. Users
+#   will also need to use AC_F77_DUMMY_MAIN (see the autoconf manual),
+#   for the same reason.
+#
+#   Many libraries are searched for, from ATLAS to CXML to ESSL. The
+#   user may also use --with-blas=<lib> in order to use some specific
+#   BLAS library <lib>. In order to link successfully, however, be
+#   aware that you will probably need to use the same Fortran compiler
+#   (which can be set via the F77 env. var.) as was used to compile the
+#   BLAS library.
+#
+#   ACTION-IF-FOUND is a list of shell commands to run if a BLAS
+#   library is found, and ACTION-IF-NOT-FOUND is a list of commands to
+#   run it if it is not found. If ACTION-IF-FOUND is not specified, the
+#   default action will define HAVE_BLAS.
+#
+#   This macro requires autoconf 2.50 or later.
+#
+# LAST MODIFICATION
+#
+#   2007-07-29
+#
+# COPYLEFT
+#
+#   Copyright (c) 2007 Steven G. Johnson <stevenj@alum.mit.edu>
+#
+#   This program is free software: you can redistribute it and/or
+#   modify it under the terms of the GNU General Public License as
+#   published by the Free Software Foundation, either version 3 of the
+#   License, or (at your option) any later version.
+#
+#   This program is distributed in the hope that it will be useful, but
+#   WITHOUT ANY WARRANTY; without even the implied warranty of
+#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+#   General Public License for more details.
+#
+#   You should have received a copy of the GNU General Public License
+#   along with this program. If not, see
+#   <http://www.gnu.org/licenses/>.
+#
+#   As a special exception, the respective Autoconf Macro's copyright
+#   owner gives unlimited permission to copy, distribute and modify the
+#   configure scripts that are the output of Autoconf when processing
+#   the Macro. You need not follow the terms of the GNU General Public
+#   License when using or distributing such scripts, even though
+#   portions of the text of the Macro appear in them. The GNU General
+#   Public License (GPL) does govern all other use of the material that
+#   constitutes the Autoconf Macro.
+#
+#   This special exception to the GPL applies to versions of the
+#   Autoconf Macro released by the Autoconf Macro Archive. When you
+#   make and distribute a modified version of the Autoconf Macro, you
+#   may extend this special exception to the GPL to apply to your
+#   modified version as well.
+
+AC_DEFUN([ACX_BLAS], [
+AC_PREREQ(2.50)
+AC_REQUIRE([AC_F77_LIBRARY_LDFLAGS])
+acx_blas_ok=no
+
+AC_ARG_WITH(blas,
+	[AC_HELP_STRING([--with-blas=<lib>], [use BLAS library <lib>])])
+case $with_blas in
+	yes | "") ;;
+	no) acx_blas_ok=disable ;;
+	-* | */* | *.a | *.so | *.so.* | *.o) BLAS_LIBS="$with_blas" ;;
+	*) BLAS_LIBS="-l$with_blas" ;;
+esac
+
+# Get fortran linker names of BLAS functions to check for.
+AC_F77_FUNC(sgemm)
+AC_F77_FUNC(dgemm)
+
+acx_blas_save_LIBS="$LIBS"
+LIBS="$LIBS $FLIBS"
+
+# First, check BLAS_LIBS environment variable
+if test $acx_blas_ok = no; then
+if test "x$BLAS_LIBS" != x; then
+	save_LIBS="$LIBS"; LIBS="$BLAS_LIBS $LIBS"
+	AC_MSG_CHECKING([for $sgemm in $BLAS_LIBS])
+	AC_TRY_LINK_FUNC($sgemm, [acx_blas_ok=yes], [BLAS_LIBS=""])
+	AC_MSG_RESULT($acx_blas_ok)
+	LIBS="$save_LIBS"
+fi
+fi
+
+# BLAS linked to by default?  (happens on some supercomputers)
+if test $acx_blas_ok = no; then
+	save_LIBS="$LIBS"; LIBS="$LIBS"
+	AC_CHECK_FUNC($sgemm, [acx_blas_ok=yes])
+	LIBS="$save_LIBS"
+fi
+
+# BLAS in ATLAS library? (http://math-atlas.sourceforge.net/)
+if test $acx_blas_ok = no; then
+	AC_CHECK_LIB(atlas, ATL_xerbla,
+		[AC_CHECK_LIB(f77blas, $sgemm,
+		[AC_CHECK_LIB(cblas, cblas_dgemm,
+			[acx_blas_ok=yes
+			 BLAS_LIBS="-lcblas -lf77blas -latlas"],
+			[], [-lf77blas -latlas])],
+			[], [-latlas])])
+fi
+
+# BLAS in PhiPACK libraries? (requires generic BLAS lib, too)
+if test $acx_blas_ok = no; then
+	AC_CHECK_LIB(blas, $sgemm,
+		[AC_CHECK_LIB(dgemm, $dgemm,
+		[AC_CHECK_LIB(sgemm, $sgemm,
+			[acx_blas_ok=yes; BLAS_LIBS="-lsgemm -ldgemm -lblas"],
+			[], [-lblas])],
+			[], [-lblas])])
+fi
+
+# BLAS in Alpha CXML library?
+if test $acx_blas_ok = no; then
+	AC_CHECK_LIB(cxml, $sgemm, [acx_blas_ok=yes;BLAS_LIBS="-lcxml"])
+fi
+
+# BLAS in Alpha DXML library? (now called CXML, see above)
+if test $acx_blas_ok = no; then
+	AC_CHECK_LIB(dxml, $sgemm, [acx_blas_ok=yes;BLAS_LIBS="-ldxml"])
+fi
+
+# BLAS in Sun Performance library?
+if test $acx_blas_ok = no; then
+	if test "x$GCC" != xyes; then # only works with Sun CC
+		AC_CHECK_LIB(sunmath, acosp,
+			[AC_CHECK_LIB(sunperf, $sgemm,
+        			[BLAS_LIBS="-xlic_lib=sunperf -lsunmath"
+                                 acx_blas_ok=yes],[],[-lsunmath])])
+	fi
+fi
+
+# BLAS in SCSL library?  (SGI/Cray Scientific Library)
+if test $acx_blas_ok = no; then
+	AC_CHECK_LIB(scs, $sgemm, [acx_blas_ok=yes; BLAS_LIBS="-lscs"])
+fi
+
+# BLAS in SGIMATH library?
+if test $acx_blas_ok = no; then
+	AC_CHECK_LIB(complib.sgimath, $sgemm,
+		     [acx_blas_ok=yes; BLAS_LIBS="-lcomplib.sgimath"])
+fi
+
+# BLAS in IBM ESSL library? (requires generic BLAS lib, too)
+if test $acx_blas_ok = no; then
+	AC_CHECK_LIB(blas, $sgemm,
+		[AC_CHECK_LIB(essl, $sgemm,
+			[acx_blas_ok=yes; BLAS_LIBS="-lessl -lblas"],
+			[], [-lblas $FLIBS])])
+fi
+
+# Generic BLAS library?
+if test $acx_blas_ok = no; then
+	AC_CHECK_LIB(blas, $sgemm, [acx_blas_ok=yes; BLAS_LIBS="-lblas"])
+fi
+
+AC_SUBST(BLAS_LIBS)
+
+LIBS="$acx_blas_save_LIBS"
+
+# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:
+if test x"$acx_blas_ok" = xyes; then
+        ifelse([$1],,AC_DEFINE(HAVE_BLAS,1,[Define if you have a BLAS library.]),[$1])
+        :
+else
+        acx_blas_ok=no
+        $2
+fi
+])dnl ACX_BLAS
diff --git a/acx_lapack.m4 b/acx_lapack.m4
new file mode 100644
--- /dev/null
+++ b/acx_lapack.m4
@@ -0,0 +1,133 @@
+##### http://autoconf-archive.cryp.to/acx_lapack.html
+#
+# SYNOPSIS
+#
+#   ACX_LAPACK([ACTION-IF-FOUND[, ACTION-IF-NOT-FOUND]])
+#
+# DESCRIPTION
+#
+#   This macro looks for a library that implements the LAPACK
+#   linear-algebra interface (see http://www.netlib.org/lapack/). On
+#   success, it sets the LAPACK_LIBS output variable to hold the
+#   requisite library linkages.
+#
+#   To link with LAPACK, you should link with:
+#
+#       $LAPACK_LIBS $BLAS_LIBS $LIBS $FLIBS
+#
+#   in that order. BLAS_LIBS is the output variable of the ACX_BLAS
+#   macro, called automatically. FLIBS is the output variable of the
+#   AC_F77_LIBRARY_LDFLAGS macro (called if necessary by ACX_BLAS), and
+#   is sometimes necessary in order to link with F77 libraries. Users
+#   will also need to use AC_F77_DUMMY_MAIN (see the autoconf manual),
+#   for the same reason.
+#
+#   The user may also use --with-lapack=<lib> in order to use some
+#   specific LAPACK library <lib>. In order to link successfully,
+#   however, be aware that you will probably need to use the same
+#   Fortran compiler (which can be set via the F77 env. var.) as was
+#   used to compile the LAPACK and BLAS libraries.
+#
+#   ACTION-IF-FOUND is a list of shell commands to run if a LAPACK
+#   library is found, and ACTION-IF-NOT-FOUND is a list of commands to
+#   run it if it is not found. If ACTION-IF-FOUND is not specified, the
+#   default action will define HAVE_LAPACK.
+#
+# LAST MODIFICATION
+#
+#   2007-07-29
+#
+# COPYLEFT
+#
+#   Copyright (c) 2007 Steven G. Johnson <stevenj@alum.mit.edu>
+#
+#   This program is free software: you can redistribute it and/or
+#   modify it under the terms of the GNU General Public License as
+#   published by the Free Software Foundation, either version 3 of the
+#   License, or (at your option) any later version.
+#
+#   This program is distributed in the hope that it will be useful, but
+#   WITHOUT ANY WARRANTY; without even the implied warranty of
+#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+#   General Public License for more details.
+#
+#   You should have received a copy of the GNU General Public License
+#   along with this program. If not, see
+#   <http://www.gnu.org/licenses/>.
+#
+#   As a special exception, the respective Autoconf Macro's copyright
+#   owner gives unlimited permission to copy, distribute and modify the
+#   configure scripts that are the output of Autoconf when processing
+#   the Macro. You need not follow the terms of the GNU General Public
+#   License when using or distributing such scripts, even though
+#   portions of the text of the Macro appear in them. The GNU General
+#   Public License (GPL) does govern all other use of the material that
+#   constitutes the Autoconf Macro.
+#
+#   This special exception to the GPL applies to versions of the
+#   Autoconf Macro released by the Autoconf Macro Archive. When you
+#   make and distribute a modified version of the Autoconf Macro, you
+#   may extend this special exception to the GPL to apply to your
+#   modified version as well.
+
+AC_DEFUN([ACX_LAPACK], [
+AC_REQUIRE([ACX_BLAS])
+acx_lapack_ok=no
+
+AC_ARG_WITH(lapack,
+        [AC_HELP_STRING([--with-lapack=<lib>], [use LAPACK library <lib>])])
+case $with_lapack in
+        yes | "") ;;
+        no) acx_lapack_ok=disable ;;
+        -* | */* | *.a | *.so | *.so.* | *.o) LAPACK_LIBS="$with_lapack" ;;
+        *) LAPACK_LIBS="-l$with_lapack" ;;
+esac
+
+# Get fortran linker name of LAPACK function to check for.
+AC_F77_FUNC(cheev)
+
+# We cannot use LAPACK if BLAS is not found
+if test "x$acx_blas_ok" != xyes; then
+        acx_lapack_ok=noblas
+fi
+
+# First, check LAPACK_LIBS environment variable
+if test "x$LAPACK_LIBS" != x; then
+        save_LIBS="$LIBS"; LIBS="$LAPACK_LIBS $BLAS_LIBS $LIBS $FLIBS"
+        AC_MSG_CHECKING([for $cheev in $LAPACK_LIBS])
+        AC_TRY_LINK_FUNC($cheev, [acx_lapack_ok=yes], [LAPACK_LIBS=""])
+        AC_MSG_RESULT($acx_lapack_ok)
+        LIBS="$save_LIBS"
+        if test acx_lapack_ok = no; then
+                LAPACK_LIBS=""
+        fi
+fi
+
+# LAPACK linked to by default?  (is sometimes included in BLAS lib)
+if test $acx_lapack_ok = no; then
+        save_LIBS="$LIBS"; LIBS="$LIBS $BLAS_LIBS $FLIBS"
+        AC_CHECK_FUNC($cheev, [acx_lapack_ok=yes])
+        LIBS="$save_LIBS"
+fi
+
+# Generic LAPACK library?
+for lapack in lapack lapack_rs6k; do
+        if test $acx_lapack_ok = no; then
+                save_LIBS="$LIBS"; LIBS="$BLAS_LIBS $LIBS"
+                AC_CHECK_LIB($lapack, $cheev,
+                    [acx_lapack_ok=yes; LAPACK_LIBS="-l$lapack"], [], [$FLIBS])
+                LIBS="$save_LIBS"
+        fi
+done
+
+AC_SUBST(LAPACK_LIBS)
+
+# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:
+if test x"$acx_lapack_ok" = xyes; then
+        ifelse([$1],,AC_DEFINE(HAVE_LAPACK,1,[Define if you have LAPACK library.]),[$1])
+        :
+else
+        acx_lapack_ok=no
+        $2
+fi
+])dnl ACX_LAPACK
diff --git a/cholmod.pc.in b/cholmod.pc.in
new file mode 100644
--- /dev/null
+++ b/cholmod.pc.in
@@ -0,0 +1,12 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: @PACKAGE_NAME@
+Description: Sparse Cholesky factorization
+Version: @PACKAGE_VERSION@
+Requires.private: @CHOLMOD_REQUIRES@
+Libs: -L${libdir} -lcholmod
+Libs.private: @LAPACK_LIBS@ @BLAS_LIBS@ -lm
+Cflags: -I${includedir}/cholmod
diff --git a/configure.ac b/configure.ac
new file mode 100644
--- /dev/null
+++ b/configure.ac
@@ -0,0 +1,177 @@
+AC_PREREQ([2.68])
+AC_INIT([CHOLMOD],[1.7.3],[davis@cise.ufl.edu])
+AC_CONFIG_SRCDIR([Core/cholmod_common.c])
+AC_CONFIG_HEADER([config.h])
+AM_INIT_AUTOMAKE([foreign])
+LT_INIT
+
+AC_PROG_INSTALL
+AC_PROG_CC
+AC_PROG_F77
+
+AC_MSG_CHECKING([whether to build mod-check])
+AC_ARG_ENABLE([mod-check],
+	[AS_HELP_STRING(
+		[--enable-mod-check],
+		[build the Check module @<:@default=yes@:>@])],
+	[mod_check=$enableval],
+	[mod_check="yes"])
+AC_MSG_RESULT([$mod_check])
+
+AC_MSG_CHECKING([whether to build mod-cholesky])
+AC_ARG_ENABLE([mod-cholesky],
+	[AS_HELP_STRING(
+		[--enable-mod-cholesky],
+		[build the Cholesky module @<:@default=yes@:>@])],
+	[mod_cholesky=$enableval],
+	[mod_cholesky="yes"])
+AC_MSG_RESULT([$mod_cholesky])
+
+AC_MSG_CHECKING([whether to build mod-partition])
+AC_ARG_ENABLE([mod-partition],
+	[AS_HELP_STRING(
+		[--enable-mod-partition],
+		[build the Partition module @<:@default=yes@:>@])],
+	[mod_partition=$enableval],
+	[mod_partition="yes"])
+AC_MSG_RESULT([$mod_partition])
+
+AC_MSG_CHECKING([whether to build mod-matrixops])
+AC_ARG_ENABLE([mod-matrixops],
+	[AS_HELP_STRING(
+		[--enable-mod-matrixops],
+		[build the MatrixOps module @<:@default=yes@:>@])],
+	[mod_matrixops=$enableval],
+	[mod_matrixops="yes"])
+AC_MSG_RESULT([$mod_matrixops])
+
+AC_MSG_CHECKING([whether to build mod-modify])
+AC_ARG_ENABLE([mod-modify],
+	[AS_HELP_STRING(
+		[--enable-mod-modify],
+		[build the Modify module @<:@default=yes@:>@])],
+	[mod_modify=$enableval],
+	[mod_modify="yes"])
+AC_MSG_RESULT([$mod_modify])
+
+AC_MSG_CHECKING([whether to build mod-supernodal])
+AC_ARG_ENABLE([mod-supernodal],
+	[AS_HELP_STRING(
+		[--enable-mod-supernodal],
+		[build the Supernodal module @<:@default=yes@:>@])],
+	[mod_supernodal=$enableval],
+	[mod_supernodal="yes"])
+AC_MSG_RESULT([$mod_supernodal])
+
+if test "x$mod_check" = "xno"; then
+	AC_DEFINE([NCHECK], [], [Define to disable the Check module])
+	AC_SUBST([CHOLMOD_NCHECK], ["#define NCHECK"])
+fi
+
+if test "x$mod_cholesky" = "xno"; then
+	AC_DEFINE([NCHOLESKY], [], [Define to disable the Cholesky module])
+	AC_SUBST([CHOLMOD_NCHOLESKY], ["#define NCHOLESKY"])
+fi
+
+if test "x$mod_partition" = "xno"; then
+	AC_DEFINE([NPARTITION], [], [Define to disable the Partition module])
+	AC_SUBST([CHOLMOD_NPARTITION], ["#define NPARTITION"])
+fi
+
+if test "x$mod_matrixops" = "xno"; then
+	AC_DEFINE([NMATRIXOPS], [], [Define to disable the MatrixOps module])
+	AC_SUBST([CHOLMOD_NMATRIXOPS], ["#define NMATRIXOPS"])
+fi
+
+if test "x$mod_modify" = "xno"; then
+	AC_DEFINE([NMODIFY], [], [Define to disable the Modify module])
+	AC_SUBST([CHOLMOD_NMODIFY], ["#define NMODIFY"])
+fi
+
+if test "x$mod_supernodal" = "xno"; then
+	AC_DEFINE([NSUPERNODAL], [], [Define to disable the Supernodal module])
+	AC_SUBST([CHOLMOD_NSUPERNODAL], ["#define NSUPERNODAL"])
+fi
+
+LIBS_SAVED=$LIBS
+
+AC_CHECK_LIB([m], [sqrt])
+
+AC_CHECK_HEADERS([stddef.h stdlib.h string.h])
+
+PKG_PROG_PKG_CONFIG
+PKG_CHECK_MODULES([UFCONFIG],[ufconfig],
+	[],
+	[AC_MSG_ERROR([cannot find ufconfig])])
+CHOLMOD_REQUIRES="ufconfig"
+
+if test "x$mod_cholesky" = "xyes"; then
+	PKG_CHECK_MODULES([AMD],[amd],
+		[CHOLMOD_REQUIRES="$CHOLMOD_REQUIRES amd"],
+		[AC_MSG_ERROR([cannot find amd (required by mod-cholesky)])])
+
+	PKG_CHECK_MODULES([COLAMD],[colamd],
+		[CHOLMOD_REQUIRES="$CHOLMOD_REQUIRES colamd"],
+		[AC_MSG_ERROR([cannot find colamd (required by mod-cholesky)])])
+fi
+
+if test "x$mod_partition" = "xyes"; then
+	PKG_CHECK_MODULES([METIS],[metis],
+		[CHOLMOD_REQUIRES="$CHOLMOD_REQUIRES metis"],
+		[AC_MSG_ERROR([cannot find metis (required by mod-partition)])])
+
+PKG_CHECK_MODULES([CAMD],[camd],
+		[CHOLMOD_REQUIRES="$CHOLMOD_REQUIRES camd"],
+		[AC_MSG_ERROR([cannot find camd (required by mod-partition)])])
+
+PKG_CHECK_MODULES([CCOLAMD],[ccolamd],
+		[CHOLMOD_REQUIRES="$CHOLMOD_REQUIRES ccolamd"],
+		[AC_MSG_ERROR([cannot find ccolamd (required by mod-partition)])])
+fi
+
+if test "x$mod_supernodal" = "xyes"; then
+	sinclude([acx_blas.m4])
+	sinclude([acx_lapack.m4])
+	ACX_LAPACK
+
+	if test "x$BLAS_LIBS" = "x"; then
+		AC_MSG_ERROR([cannot find blas (required by mod-supernodal)])
+	fi
+
+	if test "x$LAPACK_LIBS" = "x"; then
+		AC_MSG_ERROR([cannot find lapack (required by mod-supernodal)])
+	fi
+fi
+
+AC_TYPE_SIZE_T
+
+AC_FUNC_MALLOC
+AC_CHECK_FUNCS([sqrt])
+
+LIBS=$LIBS_SAVED
+
+AM_CONDITIONAL([MOD_CHECK], [test "x$mod_check" = "xyes"])
+AM_CONDITIONAL([MOD_CHOLESKY], [test "x$mod_cholesky" = "xyes"])
+AM_CONDITIONAL([MOD_PARTITION], [test "x$mod_partition" = "xyes"])
+AM_CONDITIONAL([MOD_MATRIXOPS], [test "x$mod_matrixops" = "xyes"])
+AM_CONDITIONAL([MOD_MODIFY], [test "x$mod_modify" = "xyes"])
+AM_CONDITIONAL([MOD_SUPERNODAL], [test "x$mod_supernodal" = "xyes"])
+
+AC_SUBST([CHOLMOD_REQUIRES])
+
+AC_CONFIG_FILES([
+	cholmod.pc
+	Makefile
+	Check/Makefile
+	Cholesky/Makefile
+	Core/Makefile
+	Demo/Makefile
+	Doc/Makefile
+	Include/cholmod_config.h
+	Include/Makefile
+	MATLAB/Makefile
+	MatrixOps/Makefile
+	Modify/Makefile
+	Partition/Makefile
+	Supernodal/Makefile])
+AC_OUTPUT
