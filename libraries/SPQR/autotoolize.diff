diff --git a/Demo/Makefile.am b/Demo/Makefile.am
new file mode 100644
--- /dev/null
+++ b/Demo/Makefile.am
@@ -0,0 +1,109 @@
+AM_CPPFLAGS = -I$(top_srcdir)/Include $(CHOLMOD_CFLAGS) $(UFCONFIG_CFLAGS)
+LDADD = $(top_builddir)/Source/libspqr.la
+
+EXTRA_DIST = \
+	README.txt \
+	qrdemo_diary.txt \
+	qrdemo_out.txt \
+	qrdemoc_out.txt
+
+check_PROGRAMS = \
+	qrsimple \
+	qrsimplec \
+	qrdemo \
+	qrdemoc
+
+qrsimple_SOURCES = qrsimple.cpp
+qrsimplec_SOURCES = qrsimplec.c
+qrsimplec_CFLAGS = $(AM_CFLAGS) -ansi
+qrdemo_SOURCES = qrdemo.cpp
+qrdemoc_SOURCES = qrdemoc.c
+qrdemoc_CFLAGS = $(AM_CFLAGS) -ansi
+
+MATRICES = \
+	../Matrix/GD01_b.mtx \
+	../Matrix/GD06_theory.mtx \
+	../Matrix/GD98_a.mtx \
+	../Matrix/LFAT5.mtx \
+	../Matrix/Ragusa16.mtx \
+	../Matrix/Tina_AskCal.mtx \
+	../Matrix/Tina_AskCal_perm.mtx \
+	../Matrix/a0.mtx \
+	../Matrix/a04.mtx \
+	../Matrix/a1.mtx \
+	../Matrix/a2.mtx \
+	../Matrix/a4.mtx \
+	../Matrix/ash219.mtx \
+	../Matrix/b1_ss.mtx \
+	../Matrix/bcspwr01.mtx \
+	../Matrix/bfwa62.mtx \
+	../Matrix/c2.mtx \
+	../Matrix/c32.mtx \
+	../Matrix/lfat5b.mtx \
+	../Matrix/lp_share1b.mtx \
+	../Matrix/lpi_galenet.mtx \
+	../Matrix/lpi_itest6.mtx \
+	../Matrix/r2.mtx \
+	../Matrix/s32.mtx \
+	../Matrix/west0067.mtx \
+	../Matrix/young1c.mtx
+
+check-local: $(check_PROGRAMS) $(MATRICES)
+	-./qrsimple < ../Matrix/ash219.mtx
+	-./qrsimplec < ../Matrix/ash219.mtx
+	-./qrsimple < ../Matrix/west0067.mtx
+	-./qrsimplec < ../Matrix/west0067.mtx
+	-./qrdemo < ../Matrix/a2.mtx
+	-./qrdemo < ../Matrix/r2.mtx
+	-./qrdemo < ../Matrix/a04.mtx
+	-./qrdemo < ../Matrix/a2.mtx
+	-./qrdemo < ../Matrix/west0067.mtx
+	-./qrdemo < ../Matrix/c2.mtx
+	-./qrdemo < ../Matrix/a0.mtx
+	-./qrdemo < ../Matrix/lfat5b.mtx
+	-./qrdemo < ../Matrix/bfwa62.mtx
+	-./qrdemo < ../Matrix/LFAT5.mtx
+	-./qrdemo < ../Matrix/b1_ss.mtx
+	-./qrdemo < ../Matrix/bcspwr01.mtx
+	-./qrdemo < ../Matrix/lpi_galenet.mtx
+	-./qrdemo < ../Matrix/lpi_itest6.mtx
+	-./qrdemo < ../Matrix/ash219.mtx
+	-./qrdemo < ../Matrix/a4.mtx
+	-./qrdemo < ../Matrix/s32.mtx
+	-./qrdemo < ../Matrix/c32.mtx
+	-./qrdemo < ../Matrix/lp_share1b.mtx
+	-./qrdemo < ../Matrix/a1.mtx
+	-./qrdemo < ../Matrix/GD06_theory.mtx
+	-./qrdemo < ../Matrix/GD01_b.mtx
+	-./qrdemo < ../Matrix/Tina_AskCal_perm.mtx
+	-./qrdemo < ../Matrix/Tina_AskCal.mtx
+	-./qrdemo < ../Matrix/GD98_a.mtx
+	-./qrdemo < ../Matrix/Ragusa16.mtx
+	-./qrdemo < ../Matrix/young1c.mtx
+	-./qrdemoc < ../Matrix/a2.mtx
+	-./qrdemoc < ../Matrix/r2.mtx
+	-./qrdemoc < ../Matrix/a04.mtx
+	-./qrdemoc < ../Matrix/a2.mtx
+	-./qrdemoc < ../Matrix/west0067.mtx
+	-./qrdemoc < ../Matrix/c2.mtx
+	-./qrdemoc < ../Matrix/a0.mtx
+	-./qrdemoc < ../Matrix/lfat5b.mtx
+	-./qrdemoc < ../Matrix/bfwa62.mtx
+	-./qrdemoc < ../Matrix/LFAT5.mtx
+	-./qrdemoc < ../Matrix/b1_ss.mtx
+	-./qrdemoc < ../Matrix/bcspwr01.mtx
+	-./qrdemoc < ../Matrix/lpi_galenet.mtx
+	-./qrdemoc < ../Matrix/lpi_itest6.mtx
+	-./qrdemoc < ../Matrix/ash219.mtx
+	-./qrdemoc < ../Matrix/a4.mtx
+	-./qrdemoc < ../Matrix/s32.mtx
+	-./qrdemoc < ../Matrix/c32.mtx
+	-./qrdemoc < ../Matrix/lp_share1b.mtx
+	-./qrdemoc < ../Matrix/a1.mtx
+	-./qrdemoc < ../Matrix/GD06_theory.mtx
+	-./qrdemoc < ../Matrix/GD01_b.mtx
+	-./qrdemoc < ../Matrix/Tina_AskCal_perm.mtx
+	-./qrdemoc < ../Matrix/Tina_AskCal.mtx
+	-./qrdemoc < ../Matrix/GD98_a.mtx
+	-./qrdemoc < ../Matrix/Ragusa16.mtx
+	-./qrdemoc < ../Matrix/young1c.mtx
diff --git a/Doc/Makefile.am b/Doc/Makefile.am
new file mode 100644
--- /dev/null
+++ b/Doc/Makefile.am
@@ -0,0 +1,24 @@
+EXTRA_DIST = \
+	ChangeLog \
+	README.txt \
+	gpl.txt \
+	algo_spqr.pdf \
+	spqr.pdf
+
+dist_noinst_DATA = \
+	spqr_user_guide.tex \
+	spqr_user_guide.bib
+
+pdf_DATA = \
+	spqr_user_guide.pdf \
+	algo_spqr.pdf \
+	spqr.pdf
+
+%.pdf: %.tex %.bib
+	pdflatex $*
+	bibtex $*
+	pdflatex $*
+	pdflatex $*
+
+clean-local:
+	-$(RM) *.aux *.bbl *.blg *.log *.out
diff --git a/Include/Makefile.am b/Include/Makefile.am
new file mode 100644
--- /dev/null
+++ b/Include/Makefile.am
@@ -0,0 +1,6 @@
+pkgincludedir = $(includedir)/spqr
+pkginclude_HEADERS = \
+	SuiteSparseQR.hpp \
+	SuiteSparseQR_C.h \
+	SuiteSparseQR_definitions.h \
+	spqr.hpp
diff --git a/Makefile.am b/Makefile.am
new file mode 100644
--- /dev/null
+++ b/Makefile.am
@@ -0,0 +1,5 @@
+SUBDIRS = Include Source Matrix Demo Doc
+EXTRA_DIST = README.txt
+
+pkgconfigdir = $(libdir)/pkgconfig
+pkgconfig_DATA = spqr.pc
diff --git a/Matrix/Makefile.am b/Matrix/Makefile.am
new file mode 100644
--- /dev/null
+++ b/Matrix/Makefile.am
@@ -0,0 +1,32 @@
+EXTRA_DIST = \
+	README.txt
+
+dist_noinst_DATA = \
+	GD01_b.mtx \
+	GD06_theory.mtx \
+	GD98_a.mtx \
+	LFAT5.mtx \
+	Ragusa16.mtx \
+	Tina_AskCal.mtx \
+	Tina_AskCal_perm.mtx \
+	a0.mtx \
+	a04.mtx \
+	a1.mtx \
+	a2.mtx \
+	a4.mtx \
+	arrow.mtx \
+	ash219.mtx \
+	b1_ss.mtx \
+	bcspwr01.mtx \
+	bfwa62.mtx \
+	c2.mtx \
+	c32.mtx \
+	lfat5b.mtx \
+	lp_share1b.mtx \
+	lpi_galenet.mtx \
+	lpi_itest6.mtx \
+	pwr01b.mtx \
+	r2.mtx \
+	s32.mtx \
+	west0067.mtx \
+	young1c.mtx
diff --git a/Source/Makefile.am b/Source/Makefile.am
new file mode 100644
--- /dev/null
+++ b/Source/Makefile.am
@@ -0,0 +1,50 @@
+AM_CPPFLAGS = -I$(top_srcdir)/Include $(TBB_CFLAGS) $(CHOLMOD_CFLAGS) $(UFCONFIG_CFLAGS)
+AM_CPPFLAGS += $(SPQR_NPARTITION)
+AM_CPPFLAGS += $(SPQR_HAVE_TBB)
+
+lib_LTLIBRARIES = libspqr.la
+
+libspqr_la_SOURCES = \
+	SuiteSparseQR.cpp \
+	SuiteSparseQR_C.cpp \
+	SuiteSparseQR_expert.cpp \
+	SuiteSparseQR_qmult.cpp \
+	spqr_1colamd.cpp \
+	spqr_1factor.cpp \
+	spqr_1fixed.cpp \
+	spqr_analyze.cpp \
+	spqr_append.cpp \
+	spqr_assemble.cpp \
+	spqr_cpack.cpp \
+	spqr_csize.cpp \
+	spqr_cumsum.cpp \
+	spqr_debug.cpp \
+	spqr_factorize.cpp \
+	spqr_fcsize.cpp \
+	spqr_freefac.cpp \
+	spqr_freenum.cpp \
+	spqr_freesym.cpp \
+	spqr_front.cpp \
+	spqr_fsize.cpp \
+	spqr_happly.cpp \
+	spqr_happly_work.cpp \
+	spqr_hpinv.cpp \
+	spqr_kernel.cpp \
+	spqr_larftb.cpp \
+	spqr_maxcolnorm.cpp \
+	spqr_panel.cpp \
+	spqr_parallel.cpp \
+	spqr_rconvert.cpp \
+	spqr_rcount.cpp \
+	spqr_rhpack.cpp \
+	spqr_rmap.cpp \
+	spqr_rsolve.cpp \
+	spqr_shift.cpp \
+	spqr_stranspose1.cpp \
+	spqr_stranspose2.cpp \
+	spqr_tol.cpp \
+	spqr_trapezoidal.cpp \
+	spqr_type.cpp
+
+libspqr_la_LIBADD = $(TBB_LIBS) $(CHOLMOD_LIBS) $(LAPACK_LIBS) $(BLAS_LIBS) -lm
+libspqr_la_LDFLAGS = -no-undefined -version-info 3:2:2
diff --git a/acx_blas.m4 b/acx_blas.m4
new file mode 100644
--- /dev/null
+++ b/acx_blas.m4
@@ -0,0 +1,191 @@
+##### http://autoconf-archive.cryp.to/acx_blas.html
+#
+# SYNOPSIS
+#
+#   ACX_BLAS([ACTION-IF-FOUND[, ACTION-IF-NOT-FOUND]])
+#
+# DESCRIPTION
+#
+#   This macro looks for a library that implements the BLAS
+#   linear-algebra interface (see http://www.netlib.org/blas/). On
+#   success, it sets the BLAS_LIBS output variable to hold the
+#   requisite library linkages.
+#
+#   To link with BLAS, you should link with:
+#
+#   	$BLAS_LIBS $LIBS $FLIBS
+#
+#   in that order. FLIBS is the output variable of the
+#   AC_F77_LIBRARY_LDFLAGS macro (called if necessary by ACX_BLAS), and
+#   is sometimes necessary in order to link with F77 libraries. Users
+#   will also need to use AC_F77_DUMMY_MAIN (see the autoconf manual),
+#   for the same reason.
+#
+#   Many libraries are searched for, from ATLAS to CXML to ESSL. The
+#   user may also use --with-blas=<lib> in order to use some specific
+#   BLAS library <lib>. In order to link successfully, however, be
+#   aware that you will probably need to use the same Fortran compiler
+#   (which can be set via the F77 env. var.) as was used to compile the
+#   BLAS library.
+#
+#   ACTION-IF-FOUND is a list of shell commands to run if a BLAS
+#   library is found, and ACTION-IF-NOT-FOUND is a list of commands to
+#   run it if it is not found. If ACTION-IF-FOUND is not specified, the
+#   default action will define HAVE_BLAS.
+#
+#   This macro requires autoconf 2.50 or later.
+#
+# LAST MODIFICATION
+#
+#   2007-07-29
+#
+# COPYLEFT
+#
+#   Copyright (c) 2007 Steven G. Johnson <stevenj@alum.mit.edu>
+#
+#   This program is free software: you can redistribute it and/or
+#   modify it under the terms of the GNU General Public License as
+#   published by the Free Software Foundation, either version 3 of the
+#   License, or (at your option) any later version.
+#
+#   This program is distributed in the hope that it will be useful, but
+#   WITHOUT ANY WARRANTY; without even the implied warranty of
+#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+#   General Public License for more details.
+#
+#   You should have received a copy of the GNU General Public License
+#   along with this program. If not, see
+#   <http://www.gnu.org/licenses/>.
+#
+#   As a special exception, the respective Autoconf Macro's copyright
+#   owner gives unlimited permission to copy, distribute and modify the
+#   configure scripts that are the output of Autoconf when processing
+#   the Macro. You need not follow the terms of the GNU General Public
+#   License when using or distributing such scripts, even though
+#   portions of the text of the Macro appear in them. The GNU General
+#   Public License (GPL) does govern all other use of the material that
+#   constitutes the Autoconf Macro.
+#
+#   This special exception to the GPL applies to versions of the
+#   Autoconf Macro released by the Autoconf Macro Archive. When you
+#   make and distribute a modified version of the Autoconf Macro, you
+#   may extend this special exception to the GPL to apply to your
+#   modified version as well.
+
+AC_DEFUN([ACX_BLAS], [
+AC_PREREQ(2.50)
+AC_REQUIRE([AC_F77_LIBRARY_LDFLAGS])
+acx_blas_ok=no
+
+AC_ARG_WITH(blas,
+	[AC_HELP_STRING([--with-blas=<lib>], [use BLAS library <lib>])])
+case $with_blas in
+	yes | "") ;;
+	no) acx_blas_ok=disable ;;
+	-* | */* | *.a | *.so | *.so.* | *.o) BLAS_LIBS="$with_blas" ;;
+	*) BLAS_LIBS="-l$with_blas" ;;
+esac
+
+# Get fortran linker names of BLAS functions to check for.
+AC_F77_FUNC(sgemm)
+AC_F77_FUNC(dgemm)
+
+acx_blas_save_LIBS="$LIBS"
+LIBS="$LIBS $FLIBS"
+
+# First, check BLAS_LIBS environment variable
+if test $acx_blas_ok = no; then
+if test "x$BLAS_LIBS" != x; then
+	save_LIBS="$LIBS"; LIBS="$BLAS_LIBS $LIBS"
+	AC_MSG_CHECKING([for $sgemm in $BLAS_LIBS])
+	AC_TRY_LINK_FUNC($sgemm, [acx_blas_ok=yes], [BLAS_LIBS=""])
+	AC_MSG_RESULT($acx_blas_ok)
+	LIBS="$save_LIBS"
+fi
+fi
+
+# BLAS linked to by default?  (happens on some supercomputers)
+if test $acx_blas_ok = no; then
+	save_LIBS="$LIBS"; LIBS="$LIBS"
+	AC_CHECK_FUNC($sgemm, [acx_blas_ok=yes])
+	LIBS="$save_LIBS"
+fi
+
+# BLAS in ATLAS library? (http://math-atlas.sourceforge.net/)
+if test $acx_blas_ok = no; then
+	AC_CHECK_LIB(atlas, ATL_xerbla,
+		[AC_CHECK_LIB(f77blas, $sgemm,
+		[AC_CHECK_LIB(cblas, cblas_dgemm,
+			[acx_blas_ok=yes
+			 BLAS_LIBS="-lcblas -lf77blas -latlas"],
+			[], [-lf77blas -latlas])],
+			[], [-latlas])])
+fi
+
+# BLAS in PhiPACK libraries? (requires generic BLAS lib, too)
+if test $acx_blas_ok = no; then
+	AC_CHECK_LIB(blas, $sgemm,
+		[AC_CHECK_LIB(dgemm, $dgemm,
+		[AC_CHECK_LIB(sgemm, $sgemm,
+			[acx_blas_ok=yes; BLAS_LIBS="-lsgemm -ldgemm -lblas"],
+			[], [-lblas])],
+			[], [-lblas])])
+fi
+
+# BLAS in Alpha CXML library?
+if test $acx_blas_ok = no; then
+	AC_CHECK_LIB(cxml, $sgemm, [acx_blas_ok=yes;BLAS_LIBS="-lcxml"])
+fi
+
+# BLAS in Alpha DXML library? (now called CXML, see above)
+if test $acx_blas_ok = no; then
+	AC_CHECK_LIB(dxml, $sgemm, [acx_blas_ok=yes;BLAS_LIBS="-ldxml"])
+fi
+
+# BLAS in Sun Performance library?
+if test $acx_blas_ok = no; then
+	if test "x$GCC" != xyes; then # only works with Sun CC
+		AC_CHECK_LIB(sunmath, acosp,
+			[AC_CHECK_LIB(sunperf, $sgemm,
+        			[BLAS_LIBS="-xlic_lib=sunperf -lsunmath"
+                                 acx_blas_ok=yes],[],[-lsunmath])])
+	fi
+fi
+
+# BLAS in SCSL library?  (SGI/Cray Scientific Library)
+if test $acx_blas_ok = no; then
+	AC_CHECK_LIB(scs, $sgemm, [acx_blas_ok=yes; BLAS_LIBS="-lscs"])
+fi
+
+# BLAS in SGIMATH library?
+if test $acx_blas_ok = no; then
+	AC_CHECK_LIB(complib.sgimath, $sgemm,
+		     [acx_blas_ok=yes; BLAS_LIBS="-lcomplib.sgimath"])
+fi
+
+# BLAS in IBM ESSL library? (requires generic BLAS lib, too)
+if test $acx_blas_ok = no; then
+	AC_CHECK_LIB(blas, $sgemm,
+		[AC_CHECK_LIB(essl, $sgemm,
+			[acx_blas_ok=yes; BLAS_LIBS="-lessl -lblas"],
+			[], [-lblas $FLIBS])])
+fi
+
+# Generic BLAS library?
+if test $acx_blas_ok = no; then
+	AC_CHECK_LIB(blas, $sgemm, [acx_blas_ok=yes; BLAS_LIBS="-lblas"])
+fi
+
+AC_SUBST(BLAS_LIBS)
+
+LIBS="$acx_blas_save_LIBS"
+
+# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:
+if test x"$acx_blas_ok" = xyes; then
+        ifelse([$1],,AC_DEFINE(HAVE_BLAS,1,[Define if you have a BLAS library.]),[$1])
+        :
+else
+        acx_blas_ok=no
+        $2
+fi
+])dnl ACX_BLAS
diff --git a/acx_lapack.m4 b/acx_lapack.m4
new file mode 100644
--- /dev/null
+++ b/acx_lapack.m4
@@ -0,0 +1,133 @@
+##### http://autoconf-archive.cryp.to/acx_lapack.html
+#
+# SYNOPSIS
+#
+#   ACX_LAPACK([ACTION-IF-FOUND[, ACTION-IF-NOT-FOUND]])
+#
+# DESCRIPTION
+#
+#   This macro looks for a library that implements the LAPACK
+#   linear-algebra interface (see http://www.netlib.org/lapack/). On
+#   success, it sets the LAPACK_LIBS output variable to hold the
+#   requisite library linkages.
+#
+#   To link with LAPACK, you should link with:
+#
+#       $LAPACK_LIBS $BLAS_LIBS $LIBS $FLIBS
+#
+#   in that order. BLAS_LIBS is the output variable of the ACX_BLAS
+#   macro, called automatically. FLIBS is the output variable of the
+#   AC_F77_LIBRARY_LDFLAGS macro (called if necessary by ACX_BLAS), and
+#   is sometimes necessary in order to link with F77 libraries. Users
+#   will also need to use AC_F77_DUMMY_MAIN (see the autoconf manual),
+#   for the same reason.
+#
+#   The user may also use --with-lapack=<lib> in order to use some
+#   specific LAPACK library <lib>. In order to link successfully,
+#   however, be aware that you will probably need to use the same
+#   Fortran compiler (which can be set via the F77 env. var.) as was
+#   used to compile the LAPACK and BLAS libraries.
+#
+#   ACTION-IF-FOUND is a list of shell commands to run if a LAPACK
+#   library is found, and ACTION-IF-NOT-FOUND is a list of commands to
+#   run it if it is not found. If ACTION-IF-FOUND is not specified, the
+#   default action will define HAVE_LAPACK.
+#
+# LAST MODIFICATION
+#
+#   2007-07-29
+#
+# COPYLEFT
+#
+#   Copyright (c) 2007 Steven G. Johnson <stevenj@alum.mit.edu>
+#
+#   This program is free software: you can redistribute it and/or
+#   modify it under the terms of the GNU General Public License as
+#   published by the Free Software Foundation, either version 3 of the
+#   License, or (at your option) any later version.
+#
+#   This program is distributed in the hope that it will be useful, but
+#   WITHOUT ANY WARRANTY; without even the implied warranty of
+#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+#   General Public License for more details.
+#
+#   You should have received a copy of the GNU General Public License
+#   along with this program. If not, see
+#   <http://www.gnu.org/licenses/>.
+#
+#   As a special exception, the respective Autoconf Macro's copyright
+#   owner gives unlimited permission to copy, distribute and modify the
+#   configure scripts that are the output of Autoconf when processing
+#   the Macro. You need not follow the terms of the GNU General Public
+#   License when using or distributing such scripts, even though
+#   portions of the text of the Macro appear in them. The GNU General
+#   Public License (GPL) does govern all other use of the material that
+#   constitutes the Autoconf Macro.
+#
+#   This special exception to the GPL applies to versions of the
+#   Autoconf Macro released by the Autoconf Macro Archive. When you
+#   make and distribute a modified version of the Autoconf Macro, you
+#   may extend this special exception to the GPL to apply to your
+#   modified version as well.
+
+AC_DEFUN([ACX_LAPACK], [
+AC_REQUIRE([ACX_BLAS])
+acx_lapack_ok=no
+
+AC_ARG_WITH(lapack,
+        [AC_HELP_STRING([--with-lapack=<lib>], [use LAPACK library <lib>])])
+case $with_lapack in
+        yes | "") ;;
+        no) acx_lapack_ok=disable ;;
+        -* | */* | *.a | *.so | *.so.* | *.o) LAPACK_LIBS="$with_lapack" ;;
+        *) LAPACK_LIBS="-l$with_lapack" ;;
+esac
+
+# Get fortran linker name of LAPACK function to check for.
+AC_F77_FUNC(cheev)
+
+# We cannot use LAPACK if BLAS is not found
+if test "x$acx_blas_ok" != xyes; then
+        acx_lapack_ok=noblas
+fi
+
+# First, check LAPACK_LIBS environment variable
+if test "x$LAPACK_LIBS" != x; then
+        save_LIBS="$LIBS"; LIBS="$LAPACK_LIBS $BLAS_LIBS $LIBS $FLIBS"
+        AC_MSG_CHECKING([for $cheev in $LAPACK_LIBS])
+        AC_TRY_LINK_FUNC($cheev, [acx_lapack_ok=yes], [LAPACK_LIBS=""])
+        AC_MSG_RESULT($acx_lapack_ok)
+        LIBS="$save_LIBS"
+        if test acx_lapack_ok = no; then
+                LAPACK_LIBS=""
+        fi
+fi
+
+# LAPACK linked to by default?  (is sometimes included in BLAS lib)
+if test $acx_lapack_ok = no; then
+        save_LIBS="$LIBS"; LIBS="$LIBS $BLAS_LIBS $FLIBS"
+        AC_CHECK_FUNC($cheev, [acx_lapack_ok=yes])
+        LIBS="$save_LIBS"
+fi
+
+# Generic LAPACK library?
+for lapack in lapack lapack_rs6k; do
+        if test $acx_lapack_ok = no; then
+                save_LIBS="$LIBS"; LIBS="$BLAS_LIBS $LIBS"
+                AC_CHECK_LIB($lapack, $cheev,
+                    [acx_lapack_ok=yes; LAPACK_LIBS="-l$lapack"], [], [$FLIBS])
+                LIBS="$save_LIBS"
+        fi
+done
+
+AC_SUBST(LAPACK_LIBS)
+
+# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:
+if test x"$acx_lapack_ok" = xyes; then
+        ifelse([$1],,AC_DEFINE(HAVE_LAPACK,1,[Define if you have LAPACK library.]),[$1])
+        :
+else
+        acx_lapack_ok=no
+        $2
+fi
+])dnl ACX_LAPACK
diff --git a/configure.ac b/configure.ac
new file mode 100644
--- /dev/null
+++ b/configure.ac
@@ -0,0 +1,92 @@
+AC_PREREQ([2.68])
+AC_INIT([SPQR],[1.2.2],[davis@cise.ufl.edu])
+AC_CONFIG_SRCDIR([Source/spqr_kernel.cpp])
+AC_CONFIG_HEADER([config.h])
+AM_INIT_AUTOMAKE([foreign])
+LT_INIT
+
+AC_PROG_INSTALL
+AC_PROG_F77
+AC_PROG_CC
+AC_PROG_CXX
+
+AC_MSG_CHECKING([whether to use the CHOLMOD Partition module])
+AC_ARG_WITH([cholmod-partition],
+	[AS_HELP_STRING(
+		[--with-cholmod-partition],
+		[Use METIS in the CHOLMOD partition module for partitioning @<:@default=yes@:>@])],
+	[with_cholmod_partition=$withval],
+	[with_cholmod_partition="yes"])
+AC_MSG_RESULT([$with_cholmod_partition])
+
+AC_MSG_CHECKING([whether to use tbb])
+AC_ARG_WITH([tbb],
+	[AS_HELP_STRING(
+		[--with-tbb],
+		[Use Intel Threading Building Blocks for multithreading @<:@default=yes@:>@])],
+	[with_tbb=$withval],
+	[with_tbb="yes"])
+AC_MSG_RESULT([$with_tbb])
+
+if test "x$with_cholmod_partition" = "xno"; then
+	AC_DEFINE([NPARTITION], [], [Define if CHOLMOD was compiled without the Partition module])
+	AC_SUBST([SPQR_NPARTITION], ["-DNPARTITION"])
+fi
+
+if test "x$with_tbb" = "xyes"; then
+	AC_DEFINE([HAVE_TBB], [], [Define to compile with Threading Building Blocks])
+	AC_SUBST([SPQR_HAVE_TBB], ["-DHAVE_TBB"])
+fi
+
+LIBS_SAVED=$LIBS
+
+AC_CHECK_LIB([m], [sqrt])
+
+AC_CHECK_HEADERS([float.h stdlib.h sys/time.h])
+
+sinclude([acx_blas.m4])
+sinclude([acx_lapack.m4])
+ACX_LAPACK
+
+if test "x$BLAS_LIBS" = "x"; then
+	AC_MSG_ERROR([cannot find blas])
+fi
+
+if test "x$LAPACK_LIBS" = "x"; then
+	AC_MSG_ERROR([cannot find lapack])
+fi
+
+PKG_PROG_PKG_CONFIG
+PKG_CHECK_MODULES([UFCONFIG],[ufconfig],
+	[],
+	[AC_MSG_ERROR([cannot find ufconfig])])
+PKG_CHECK_MODULES([CHOLMOD],[cholmod],
+	[],
+	[AC_MSG_ERROR([cannot find cholmod])])
+
+if test "x$with_tbb" = "xyes"; then
+	AC_CHECK_HEADERS([tbb/task.h])
+	AC_SUBST([TBB_CFLAGS], [""])
+	AC_SUBST([TBB_LIBS], ["-ltbb"])
+fi
+
+AC_HEADER_STDBOOL
+AC_C_INLINE
+AC_TYPE_SIZE_T
+
+AC_CHECK_FUNCS([clock_gettime sqrt])
+
+LIBS=$LIBS_SAVED
+
+AM_CONDITIONAL([CHOLMOD_PARTITION], [test "x$with_cholmod_partition" = "xyes"])
+AM_CONDITIONAL([WITH_TBB], [test "x$with_tbb" = "xyes"])
+
+AC_CONFIG_FILES([
+	spqr.pc
+	Makefile
+	Demo/Makefile
+	Doc/Makefile
+	Include/Makefile
+	Matrix/Makefile
+	Source/Makefile])
+AC_OUTPUT
diff --git a/spqr.pc.in b/spqr.pc.in
new file mode 100644
--- /dev/null
+++ b/spqr.pc.in
@@ -0,0 +1,12 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: @PACKAGE_NAME@
+Description: Multifrontal sparse QR factorization
+Version: @PACKAGE_VERSION@
+Requires.private: cholmod ufconfig
+Libs: -L${libdir} -lspqr
+Libs.private: @TBB_LIBS@ @LAPACK_LIBS@ @BLAS_LIBS@ -lm
+Cflags: -I${includedir}/spqr
