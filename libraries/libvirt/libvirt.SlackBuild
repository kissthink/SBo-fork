#!/bin/sh

# Slackware build script for libvirt
# Written by Michal Bialozor <bialyy@o2.pl>

PRGNAM=libvirt
VERSION=0.9.12
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tar.gz
cd $PRGNAM-$VERSION
chown -R root:root .
chmod -R u+w,go+r-w,a-s .

CFLAGS="$SLKCFLAGS" \
./configure \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --bindir=/usr/sbin \
  --sbindir=/usr/sbin \
  --sysconfdir=/etc \
  --localstatedir=/var \
  --mandir=/usr/man \
  --docdir=/usr/doc/$PRGNAM-$VERSION \
  --enable-static=no \
  --enable-shared=yes \
  --without-xen \
  --build=$ARCH-slackware-linux

make \
  HTML_DIR=/usr/doc/$PRGNAM-$VERSION \
  EXAMPLE_DIR=/usr/doc/$PRGNAM-$VERSION/examples
make \
  HTML_DIR=/usr/doc/$PRGNAM-$VERSION \
  EXAMPLE_DIR=/usr/doc/$PRGNAM-$VERSION/examples \
  install-strip DESTDIR=$PKG

mv $PKG/etc/libvirt/qemu.conf \
   $PKG/etc/libvirt/qemu.conf.new
mv $PKG/etc/libvirt/qemu/networks/default.xml \
   $PKG/etc/libvirt/qemu/networks/default.xml.new
mv $PKG/etc/libvirt/libvirt.conf \
   $PKG/etc/libvirt/libvirt.conf.new
mv $PKG/etc/libvirt/libvirtd.conf \
   $PKG/etc/libvirt/libvirtd.conf.new
mv $PKG/etc/libvirt/nwfilter/qemu-announce-self.xml \
   $PKG/etc/libvirt/nwfilter/qemu-announce-self.xml.new
mv $PKG/etc/libvirt/nwfilter/no-arp-spoofing.xml \
   $PKG/etc/libvirt/nwfilter/no-arp-spoofing.xml.new
mv $PKG/etc/libvirt/nwfilter/no-mac-spoofing.xml \
   $PKG/etc/libvirt/nwfilter/no-mac-spoofing.xml.new
mv $PKG/etc/libvirt/nwfilter/allow-incoming-ipv4.xml \
   $PKG/etc/libvirt/nwfilter/allow-incoming-ipv4.xml.new
mv $PKG/etc/libvirt/nwfilter/allow-dhcp-server.xml \
   $PKG/etc/libvirt/nwfilter/allow-dhcp-server.xml.new
mv $PKG/etc/libvirt/nwfilter/allow-arp.xml \
   $PKG/etc/libvirt/nwfilter/allow-arp.xml.new
mv $PKG/etc/libvirt/nwfilter/no-arp-ip-spoofing.xml \
   $PKG/etc/libvirt/nwfilter/no-arp-ip-spoofing.xml.new
mv $PKG/etc/libvirt/nwfilter/no-arp-mac-spoofing.xml \
   $PKG/etc/libvirt/nwfilter/no-arp-mac-spoofing.xml.new
mv $PKG/etc/libvirt/nwfilter/no-other-rarp-traffic.xml \
   $PKG/etc/libvirt/nwfilter/no-other-rarp-traffic.xml.new
mv $PKG/etc/libvirt/nwfilter/clean-traffic.xml \
   $PKG/etc/libvirt/nwfilter/clean-traffic.xml.new
mv $PKG/etc/libvirt/nwfilter/qemu-announce-self-rarp.xml \
   $PKG/etc/libvirt/nwfilter/qemu-announce-self-rarp.xml.new
mv $PKG/etc/libvirt/nwfilter/no-mac-broadcast.xml \
   $PKG/etc/libvirt/nwfilter/no-mac-broadcast.xml.new
mv $PKG/etc/libvirt/nwfilter/no-ip-spoofing.xml \
   $PKG/etc/libvirt/nwfilter/no-ip-spoofing.xml.new
mv $PKG/etc/libvirt/nwfilter/allow-dhcp.xml \
   $PKG/etc/libvirt/nwfilter/allow-dhcp.xml.new
mv $PKG/etc/libvirt/nwfilter/no-other-l2-traffic.xml \
   $PKG/etc/libvirt/nwfilter/no-other-l2-traffic.xml.new
mv $PKG/etc/libvirt/nwfilter/allow-ipv4.xml \
   $PKG/etc/libvirt/nwfilter/allow-ipv4.xml.new
mv $PKG/etc/libvirt/nwfilter/no-ip-multicast.xml \
   $PKG/etc/libvirt/nwfilter/no-ip-multicast.xml.new
mv $PKG/etc/libvirt/lxc.conf \
   $PKG/etc/libvirt/lxc.conf.new
mv $PKG/etc/logrotate.d/libvirtd \
   $PKG/etc/logrotate.d/libvirtd.new
mv $PKG/etc/logrotate.d/libvirtd.lxc \
   $PKG/etc/logrotate.d/libvirtd.lxc.new
mv $PKG/etc/logrotate.d/libvirtd.qemu \
   $PKG/etc/logrotate.d/libvirtd.qemu.new
mv $PKG/etc/logrotate.d/libvirtd.uml \
   $PKG/etc/logrotate.d/libvirtd.uml.new
mv $PKG/etc/sasl2/libvirt.conf \
   $PKG/etc/sasl2/libvirt.conf.new
mv $PKG/etc/sysctl.d/libvirtd \
   $PKG/etc/sysctl.d/libvirtd.new

find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a \
  ABOUT-NLS AUTHORS ChangeLog COPYING* INSTALL README NEWS TODO \
  $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild
rm -rf $PKG/usr/share/doc

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
