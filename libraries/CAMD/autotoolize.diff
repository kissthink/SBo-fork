diff --git a/Demo/Makefile.am b/Demo/Makefile.am
new file mode 100644
--- /dev/null
+++ b/Demo/Makefile.am
@@ -0,0 +1,37 @@
+AM_CPPFLAGS = -I$(top_srcdir)/Include $(UFCONFIG_CFLAGS)
+LDADD = $(top_builddir)/Source/libcamd.la
+
+EXTRA_DIST = \
+	camd_demo.out \
+	camd_demo2.out \
+	camd_l_demo.out \
+	camd_simple.out
+
+# Disable the .out implicit pattern rule.  Prevents GNU make from
+# adding bogus dependencies for the .out files listed above.
+%.out: %
+
+check_PROGRAMS = \
+	camd_demo \
+	camd_demo2 \
+	camd_l_demo \
+	camd_simple
+
+camd_demo_SOURCES = camd_demo.c
+camd_demo2_SOURCES = camd_demo2.c
+camd_l_demo_SOURCES = camd_l_demo.c
+camd_simple_SOURCES = camd_simple.c
+
+check-local: $(check_PROGRAMS) $(check_PROGRAMS:=.out)
+	@for i in $(check_PROGRAMS); do \
+		echo "Testing $$i"; \
+		./$$i$(EXEEXT) > my_$$i.out; \
+		if diff -u $$i.out my_$$i.out; then \
+			echo "Test $$i PASSED."; \
+		else \
+			echo "Test $$i FAILED."; \
+		fi; \
+	done
+
+clean-local:
+	-$(RM) my_*.out
diff --git a/Doc/Makefile.am b/Doc/Makefile.am
new file mode 100644
--- /dev/null
+++ b/Doc/Makefile.am
@@ -0,0 +1,14 @@
+EXTRA_DIST = ChangeLog License lesser.txt
+
+dist_noinst_SCRIPTS = cdiff docdiff
+dist_noinst_DATA = CAMD_UserGuide.tex CAMD_UserGuide.bib camd.sed
+pdf_DATA = CAMD_UserGuide.pdf
+
+%.pdf: %.tex %.bib
+	pdflatex $*
+	bibtex $*
+	pdflatex $*
+	pdflatex $*
+
+clean-local:
+	-$(RM) *.aux *.bbl *.blg *.log *.toc
diff --git a/Include/Makefile.am b/Include/Makefile.am
new file mode 100644
--- /dev/null
+++ b/Include/Makefile.am
@@ -0,0 +1,2 @@
+pkgincludedir = $(includedir)/camd
+pkginclude_HEADERS = camd.h camd_internal.h
diff --git a/Makefile.am b/Makefile.am
new file mode 100644
--- /dev/null
+++ b/Makefile.am
@@ -0,0 +1,5 @@
+SUBDIRS = Include Source Demo Doc
+EXTRA_DIST = README.txt
+
+pkgconfigdir = $(libdir)/pkgconfig
+pkgconfig_DATA = camd.pc
diff --git a/Source/Makefile.am b/Source/Makefile.am
new file mode 100644
--- /dev/null
+++ b/Source/Makefile.am
@@ -0,0 +1,29 @@
+AM_CPPFLAGS = -I$(top_srcdir)/Include $(UFCONFIG_CFLAGS)
+
+CAMDSRC = \
+	camd_1.c \
+	camd_2.c \
+	camd_aat.c \
+	camd_control.c \
+	camd_defaults.c \
+	camd_dump.c \
+	camd_info.c \
+	camd_order.c \
+	camd_postorder.c \
+	camd_preprocess.c \
+	camd_valid.c
+
+lib_LTLIBRARIES = libcamd.la
+noinst_LTLIBRARIES = libcamdi.la libcamdl.la
+
+libcamdi_la_SOURCES = $(CAMDSRC)
+libcamdi_la_LIBADD = -lm
+libcamdi_la_CPPFLAGS = $(AM_CPPFLAGS) -DDINT
+
+libcamdl_la_SOURCES = $(CAMDSRC)
+libcamdl_la_LIBADD = -lm
+libcamdl_la_CPPFLAGS = $(AM_CPPFLAGS) -DDLONG
+
+libcamd_la_SOURCES = camd_global.c
+libcamd_la_LIBADD = libcamdl.la libcamdi.la
+libcamd_la_LDFLAGS = -no-undefined -version-info 4:2:2
diff --git a/camd.pc.in b/camd.pc.in
new file mode 100644
--- /dev/null
+++ b/camd.pc.in
@@ -0,0 +1,12 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: @PACKAGE_NAME@
+Description: Constrained approximate minimum degree ordering
+Version: @PACKAGE_VERSION@
+Requires.private: ufconfig
+Libs: -L${libdir} -lcamd
+Libs.private: -lm
+Cflags: -I${includedir}/camd
diff --git a/configure.ac b/configure.ac
new file mode 100644
--- /dev/null
+++ b/configure.ac
@@ -0,0 +1,35 @@
+AC_PREREQ([2.68])
+AC_INIT([CAMD],[2.2.2],[davis@cise.ufl.edu])
+AC_CONFIG_SRCDIR([Source/camd_global.c])
+AC_CONFIG_HEADER([config.h])
+AM_INIT_AUTOMAKE([foreign])
+LT_INIT
+
+AC_PROG_INSTALL
+AC_PROG_CC
+
+LIBS_SAVED=$LIBS
+
+AC_CHECK_LIB([m], [sqrt])
+
+AC_CHECK_HEADERS([limits.h stddef.h stdlib.h])
+
+PKG_PROG_PKG_CONFIG
+PKG_CHECK_MODULES([UFCONFIG],[ufconfig],
+	[],
+	[AC_MSG_ERROR([cannot find ufconfig])])
+
+AC_TYPE_SIZE_T
+
+AC_CHECK_FUNCS([sqrt])
+
+LIBS=$LIBS_SAVED
+
+AC_CONFIG_FILES([
+	camd.pc
+	Makefile
+	Demo/Makefile
+	Doc/Makefile
+	Include/Makefile
+	Source/Makefile])
+AC_OUTPUT
