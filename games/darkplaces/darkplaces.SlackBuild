#!/bin/sh

# Slackware build script for darkplaces

# Written by M.Dinslage (daedra1980@gmail.com)
# Big thanks to Robby Workman for tweaks and
# various script cleanups.

PRGNAM=darkplaces
VERSION=${VERSION:-20110628}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) export ARCH=i486 ;;
    arm*) export ARCH=arm ;;
       *) export ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

SRCDIR=${SRCDIR:-engine20110628}
SRCVER=${SRCVER:-enginesource20110628}
MODVER=${MODVER:-darkplacesmod20080808}

# By default we won't add the darkplaces game mods
DPMOD=${DPMOD:-"NO"}

# Pass SOURCE=YES if you want to build you binaries from source
SOURCE=${SOURCE:-"NO"}

# By default application launcher will use opengl version
SDL=${SDL:-"NO"}

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
  BINARCH="686"
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
  BINARCH="686"
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  SLKLDFLAGS="-L/usr/lib64"; LIBDIRSUFFIX="64"
  BINARCH="x86_64"
else
  # might not work at all, but we could try :)
  SLKCFLAGS="-O2"
  BINARCH=$ARCH
  SOURCE="YES"
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM
mkdir -p $PRGNAM
cd $PRGNAM
rm -rf $PRGNAM$SRCDIR
unzip $CWD/$PRGNAM$SRCDIR.zip
unzip $PRGNAM$SRCVER.zip # this is in the first zip file
chown -R root:root .
find . \
 \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \;

# Let the Makefile set its own flags;
# this way the precompiled and from-source binaries use the same flags
if [ "$SOURCE" != "NO" ]; then
  cd $PRGNAM
  make release
  cd -
fi

# Create game directory and copy executables
mkdir -p $PKG/usr/share/games/darkplaces
if [ "$SOURCE" = "NO" ]; then
  cp -a darkplaces-linux-$BINARCH-dedicated $PKG/usr/share/games/darkplaces/$PRGNAM-dedicated
  cp -a darkplaces-linux-$BINARCH-glx $PKG/usr/share/games/darkplaces/$PRGNAM-glx
  cp -a darkplaces-linux-$BINARCH-sdl $PKG/usr/share/games/darkplaces/$PRGNAM-sdl
else
  cp -a $PRGNAM/$PRGNAM-{glx,sdl,dedicated} $PKG/usr/share/games/darkplaces
fi

# Create directory for original game *.pak files
mkdir -p $PKG/usr/share/games/darkplaces/id1

# Add launchers to path
mkdir $PKG/usr/games
for i in glx sdl dedicated ; do
  cat $CWD/darkplaces-$i > $PKG/usr/games/darkplaces-$i ;
  chmod 0755 $PKG/usr/games/darkplaces-$i ;
done

# Add application launcher
mkdir -p $PKG/usr/share/{applications,pixmaps}
cat $CWD/$PRGNAM.desktop > $PKG/usr/share/applications/$PRGNAM.desktop
cat $CWD/quake.png > $PKG/usr/share/pixmaps/quake.png

# Make application launcher execute SDL version if requested.
if [ "$SDL" != "NO" ]; then
   sed -i 's,darkplaces-glx,darkplaces-sdl,g' $PKG/usr/share/applications/$PRGNAM.desktop
fi

if [ "$DPMOD" != "NO" ]; then
  unzip $CWD/$MODVER.zip
  chown -R root:root dpmod
  find dpmod \
    \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
    -exec chmod 755 {} \; -o \
    \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
    -exec chmod 644 {} \;
  cp -a dpmod $PKG/usr/share/games/darkplaces
  sed -i 's,exec ./darkplaces-glx,exec ./darkplaces-glx -game dpmod,g' \
    $PKG/usr/games/darkplaces-glx
  sed -i 's,exec ./darkplaces-sdl,exec ./darkplaces-sdl -game dpmod,g' \
    $PKG/usr/games/darkplaces-sdl
fi

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a README-SDL.txt darkplaces.txt $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild
cat $CWD/README.SLACKWARE > $PKG/usr/doc/$PRGNAM-$VERSION/README.SLACKWARE

# We only need to strip the binaries if we're compiling from source
if [ "$SOURCE" != "NO" ]; then
  find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF \
   | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true
fi

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
