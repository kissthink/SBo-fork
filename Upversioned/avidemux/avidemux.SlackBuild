#!/bin/sh

# Slackware build script for avidemux

# Copyright 2007  Adnan Hodzic <AbsintheSyringe@gmail.com>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Modified by Niklas "Nille" Åkerström to use cmake since thats what the
# project will use in the future.   No additional license terms added

PRGNAM=avidemux
VERSION=${VERSION:-2.5.2}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}

# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/${PRGNAM}_${VERSION}.tar.gz
mv ${PRGNAM}_${VERSION} $PRGNAM-$VERSION
cd $PRGNAM-$VERSION
chown -R root:root .
chmod -R a-s,u+w,go+r-w .

#Patch that installs i18n in the correct place even if we compile with qt4 support
cat $CWD/avidemux-2.5.1-i18n.patch | patch -p1 --verbose --backup --suffix=.orig

if [ "$ARCH" = "x86_64" ]; then
  # Some paths are incorrectly hardcoded to "lib":
  sed -i -e "s/Dir=\"lib\"/Dir=\"lib${LIBDIRSUFFIX}\"/" $(grep -lr 'Dir="lib"' .)
fi

mkdir build
cd build

  CFLAGS="$SLKCFLAGS" \
  CXXFLAGS="$SLKCFLAGS" \
  cmake . \
    -DCMAKE_INSTALL_PREFIX:STRING="/usr" \
    -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_VERBOSE_MAKEFILE:BOOL="TRUE" \
    -DLIB_SUFFIX:STRING="$LIBDIRSUFFIX" ..

# Here are some valid options for cmake to build or not build against a dep
# (for those who aren't very familiar with cmake)
# Note that none of them should be needed though, as cmake automatically
# detects what is and isn't on the system.
# They're all boolean values, so it uses TRUE 1 YES or FALSE 0 NO
# (TRUE, 1, and YES all mean the same thing and you should only use one of them)
#	alsa || -DNO_ALSA:BOOL=
#	oss || -DNO_OSS:BOOL=
#	nls || -DNO_NLS:BOOL=
#	sdl || -DNO_SDL:BOOL=
#	fontconfig || -DNO_FontConfig:BOOL=
#	xv || -DNO_Xvideo:BOOL=
#	esd || -DNO_Esd:BOOL=
#	jack || -DNO_Jack:BOOL=
#	aften || -DNO_Aften:BOOL=
#	libsamplerate || -DNO_libsamplerate:BOOL=
#	lame || -DNO_Lame:BOOL=
#	faac -DNO_FAAC:BOOL=
#	xvid || -DNO_Xvid:BOOL=
#	amrnb || -DNO_AMRNB:BOOL=
#	dts || -DNO_libdca:BOOL=
#	x264 || -DNO_x264:BOOL=
#	aac || -DNO_FAAD:BOOL=
#	aac || -DNO_NeAAC:BOOL=
#	vorbis || -DNO_Vorbis:BOOL=
#	png || -DNO_libPNG:BOOL=
#	arts || -DNO_ARTS:BOOL=
#	truetype || -DNO_FREETYPE:BOOL=
#	gtk || -DNO_GTK:BOOL=
#	qt4 || -DNO_QT4:BOOL=

  make
  make DESTDIR=$PKG install/strip
cd ..

mkdir -p build_plugins
cd build_plugins
  cmake \
    -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DMAN_INSTALL_DIR=/usr/man \
    -DSYSCONF_INSTALL_DIR=/etc \
    -DLIB_SUFFIX=${LIBDIRSUFFIX} \
    -DAVIDEMUX_SOURCE_DIR=$(cd .. ; pwd) \
    -DAVIDEMUX_CORECONFIG_DIR=$(cd .. ; pwd)/build/config \
    -DAVIDEMUX_INSTALL_PREFIX=$(cd .. ; pwd)/build \
    ../plugins
  make
  make DESTDIR=$PKG install/strip
cd -

mkdir -p $PKG/usr/man/man1
cat man/avidemux.1 | gzip -9c > $PKG/usr/man/man1/avidemux.1.gz

cd $TMP/$PRGNAM-$VERSION
mkdir -p $PKG/usr/share/{applications,pixmaps}
cat avidemux2-gtk.desktop > $PKG/usr/share/applications/avidemux2-gtk.desktop
cat avidemux2-gtk.desktop > $PKG/usr/share/applications/avidemux2-qt.desktop
cat avidemux_icon.png > $PKG/usr/share/pixmaps/avidemux.png
#patch avidemux2_qt.desktop to exec avidemux2_qt4 instead of avidemux2_gtk
sed -i 's/avidemux2_gtk/avidemux2_qt4/' $PKG/usr/share/applications/avidemux2-qt.desktop
sed -i 's/GTK+/Qt/g' $PKG/usr/share/applications/avidemux2-qt.desktop
sed -i 's/GTK/Qt/' $PKG/usr/share/applications/avidemux2-qt.desktop

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a AUTHORS COPYING README TODO \
  $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}

if [ "$1" = "--cleanup" ]; then
	 rm -rf $PKG $TMP/$PRGNAM-$VERSION
 fi
