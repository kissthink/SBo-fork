Description: Upstream changes introduced in version 0.90.85+dfsg-2
 This patch has been created by dpkg-source during the package build.
 Here's the last changelog entry, hopefully it gives details on why
 those changes were made:
 .
 milkytracker (0.90.85+dfsg-2) unstable; urgency=low
 .
   * Apply 64bit_freebsd_fix.patch from homepage. (Closes: #626627)
 .
 The person named in the Author field signed this changelog entry.
Author: Gürkan Sengün <gurkan@phys.ethz.ch>
Bug-Debian: http://bugs.debian.org/626627

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: http://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- milkytracker-0.90.85+dfsg.orig/src/tracker/sdl/SDL_Main.cpp
+++ milkytracker-0.90.85+dfsg/src/tracker/sdl/SDL_Main.cpp
@@ -751,8 +751,8 @@ void processSDLUserEvents(const SDL_User
 		case SDLUserEventLMouseRepeat:
 		{
 			PPPoint p;
-			p.x = (pp_int32)event.data1;
-			p.y = (pp_int32)event.data2;
+			p.x = reinterpret_cast<intptr_t> (event.data1);
+			p.y = reinterpret_cast<intptr_t> (event.data2);
 			PPEvent myEvent(eLMouseRepeat, &p, sizeof(PPPoint));		
 			RaiseEventSerialized(&myEvent);
 			break;
@@ -761,8 +761,8 @@ void processSDLUserEvents(const SDL_User
 		case SDLUserEventRMouseRepeat:
 		{
 			PPPoint p;
-			p.x = (pp_int32)event.data1;
-			p.y = (pp_int32)event.data2;
+			p.x = reinterpret_cast<intptr_t> (event.data1);
+			p.y = reinterpret_cast<intptr_t> (event.data2);
 			PPEvent myEvent(eRMouseRepeat, &p, sizeof(PPPoint));		
 			RaiseEventSerialized(&myEvent);
 			break;
@@ -770,8 +770,8 @@ void processSDLUserEvents(const SDL_User
 
 		case SDLUserEventMidiKeyDown:
 		{
-			pp_int32 note = (pp_int32)event.data1;
-			pp_int32 volume = (pp_int32)event.data2;
+			pp_int32 note = reinterpret_cast<intptr_t> (event.data1);
+			pp_int32 volume = reinterpret_cast<intptr_t> (event.data2);
 			globalMutex->lock();
 			myTracker->sendNoteDown(note, volume);
 			globalMutex->unlock();
@@ -780,7 +780,7 @@ void processSDLUserEvents(const SDL_User
 
 		case SDLUserEventMidiKeyUp:
 		{
-			pp_int32 note = (pp_int32)event.data1;
+			pp_int32 note = reinterpret_cast<intptr_t> (event.data1);
 			globalMutex->lock();
 			myTracker->sendNoteUp(note);
 			globalMutex->unlock();
